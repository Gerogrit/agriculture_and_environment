<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20211.21.0511.0935                               -->
<workbook source-build='2021.1.2 (20211.21.0511.0935)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <_.fcp.SetMembershipControl.true...SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Dbv Group Parameter' datatype='integer' name='[Dbv Group (Agri Dbv Consumption) Parameter]' param-domain-type='range' role='measure' type='quantitative' value='3'>
        <calculation class='tableau' formula='3' />
        <range max='10' min='1' />
      </column>
      <column caption='Food Product Parameter' datatype='string' name='[Food Product Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Fish&quot;'>
        <calculation class='tableau' formula='&quot;Fish&quot;' />
        <members>
          <member value='&quot;Bread&quot;' />
          <member value='&quot;Citrus fruits&quot;' />
          <member value='&quot;Eggs (items)&quot;' />
          <member value='&quot;Fish&quot;' />
          <member value='&quot;Fruits&quot;' />
          <member value='&quot;Meat&quot;' />
          <member value='&quot;Milk, Butter, Cheese&quot;' />
          <member value='&quot;Oils, fats&quot;' />
          <member value='&quot;Potatoes&quot;' />
          <member value='&quot;Vegetables, salad&quot;' />
        </members>
      </column>
      <column caption='Year Parameter' datatype='date' name='[Year Parameter]' param-domain-type='list' role='measure' type='quantitative' value='#2005-01-01#'>
        <calculation class='tableau' formula='#2005-01-01#' />
        <members>
          <member value='#2021-07-05#' />
          <member value='#1950-01-01#' />
          <member value='#1951-01-01#' />
          <member value='#1952-01-01#' />
          <member value='#1953-01-01#' />
          <member value='#1954-01-01#' />
          <member value='#1955-01-01#' />
          <member value='#1956-01-01#' />
          <member value='#1957-01-01#' />
          <member value='#1958-01-01#' />
          <member value='#1959-01-01#' />
          <member value='#1960-01-01#' />
          <member value='#1961-01-01#' />
          <member value='#1962-01-01#' />
          <member value='#1963-01-01#' />
          <member value='#1964-01-01#' />
          <member value='#1965-01-01#' />
          <member value='#1966-01-01#' />
          <member value='#1967-01-01#' />
          <member value='#1968-01-01#' />
          <member value='#1969-01-01#' />
          <member value='#1970-01-01#' />
          <member value='#1971-01-01#' />
          <member value='#1972-01-01#' />
          <member value='#1973-01-01#' />
          <member value='#1974-01-01#' />
          <member value='#1975-01-01#' />
          <member value='#1976-01-01#' />
          <member value='#1977-01-01#' />
          <member value='#1978-01-01#' />
          <member value='#1979-01-01#' />
          <member value='#1980-01-01#' />
          <member value='#1981-01-01#' />
          <member value='#1982-01-01#' />
          <member value='#1983-01-01#' />
          <member value='#1984-01-01#' />
          <member value='#1985-01-01#' />
          <member value='#1986-01-01#' />
          <member value='#1987-01-01#' />
          <member value='#1988-01-01#' />
          <member value='#1989-01-01#' />
          <member value='#1990-01-01#' />
          <member value='#1991-01-01#' />
          <member value='#1992-01-01#' />
          <member value='#1993-01-01#' />
          <member value='#1994-01-01#' />
          <member value='#1995-01-01#' />
          <member value='#1996-01-01#' />
          <member value='#1997-01-01#' />
          <member value='#1998-01-01#' />
          <member value='#1999-01-01#' />
          <member value='#2000-01-01#' />
          <member value='#2001-01-01#' />
          <member value='#2002-01-01#' />
          <member value='#2003-01-01#' />
          <member value='#2004-01-01#' />
          <member value='#2005-01-01#' />
          <member value='#2006-01-01#' />
          <member value='#2007-01-01#' />
          <member value='#2008-01-01#' />
          <member value='#2009-01-01#' />
          <member value='#2010-01-01#' />
          <member value='#2011-01-01#' />
          <member value='#2012-01-01#' />
          <member value='#2013-01-01#' />
          <member value='#2014-01-01#' />
          <member value='#2015-01-01#' />
          <member value='#2016-01-01#' />
          <member value='#2017-01-01#' />
          <member value='#2018-01-01#' />
          <member value='#2019-01-01#' />
          <member value='#2020-01-01#' />
          <member value='#2021-01-01#' />
          <member value='#2022-01-01#' />
          <member value='#2023-01-01#' />
          <member value='#2024-01-01#' />
          <member value='#2025-01-01#' />
          <member value='#2026-01-01#' />
          <member value='#2027-01-01#' />
          <member value='#2028-01-01#' />
          <member value='#2029-01-01#' />
          <member value='#2030-01-01#' />
          <member value='#2031-01-01#' />
          <member value='#2032-01-01#' />
          <member value='#2033-01-01#' />
          <member value='#2034-01-01#' />
          <member value='#2035-01-01#' />
          <member value='#2036-01-01#' />
          <member value='#2037-01-01#' />
          <member value='#2038-01-01#' />
          <member value='#2039-01-01#' />
          <member value='#2040-01-01#' />
          <member value='#2041-01-01#' />
          <member value='#2042-01-01#' />
          <member value='#2043-01-01#' />
          <member value='#2044-01-01#' />
          <member value='#2045-01-01#' />
          <member value='#2046-01-01#' />
          <member value='#2047-01-01#' />
          <member value='#2048-01-01#' />
          <member value='#2049-01-01#' />
          <member value='#2050-01-01#' />
          <member value='#2051-01-01#' />
          <member value='#2052-01-01#' />
          <member value='#2053-01-01#' />
          <member value='#2054-01-01#' />
          <member value='#2055-01-01#' />
          <member value='#2056-01-01#' />
          <member value='#2057-01-01#' />
          <member value='#2058-01-01#' />
          <member value='#2059-01-01#' />
          <member value='#2060-01-01#' />
          <member value='#2061-01-01#' />
          <member value='#2062-01-01#' />
          <member value='#2063-01-01#' />
          <member value='#2064-01-01#' />
          <member value='#2065-01-01#' />
          <member value='#2066-01-01#' />
          <member value='#2067-01-01#' />
          <member value='#2068-01-01#' />
          <member value='#2069-01-01#' />
          <member value='#2070-01-01#' />
          <member value='#2071-01-01#' />
          <member value='#2072-01-01#' />
          <member value='#2073-01-01#' />
          <member value='#2074-01-01#' />
          <member value='#2075-01-01#' />
          <member value='#2076-01-01#' />
          <member value='#2077-01-01#' />
          <member value='#2078-01-01#' />
          <member value='#2079-01-01#' />
          <member value='#2080-01-01#' />
          <member value='#2081-01-01#' />
          <member value='#2082-01-01#' />
          <member value='#2083-01-01#' />
          <member value='#2084-01-01#' />
          <member value='#2085-01-01#' />
          <member value='#2086-01-01#' />
          <member value='#2087-01-01#' />
          <member value='#2088-01-01#' />
          <member value='#2089-01-01#' />
          <member value='#2090-01-01#' />
          <member value='#2091-01-01#' />
          <member value='#2092-01-01#' />
          <member value='#2093-01-01#' />
          <member value='#2094-01-01#' />
          <member value='#2095-01-01#' />
          <member value='#2096-01-01#' />
          <member value='#2097-01-01#' />
          <member value='#2098-01-01#' />
          <member value='#2099-01-01#' />
          <member value='#2100-01-01#' />
        </members>
      </column>
    </datasource>
    <datasource caption='agri_un_world_population (capstone_pool)' inline='true' name='federated.12mrz581n4tg8e1drtbfn1ve0vds' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='db-postgresql-fra1-70962-do-user-8861194-0.b.db.ondigitalocean.com' name='postgres.0njyuuu101c2qt1cmsgzg18y0yta'>
            <connection authentication='username-password' class='postgres' dbname='capstone_pool' one-time-sql='' port='25061' server='db-postgresql-fra1-70962-do-user-8861194-0.b.db.ondigitalocean.com' sslmode='require' username='dauser' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='postgres.0njyuuu101c2qt1cmsgzg18y0yta' name='agri_un_world_population' table='[public].[agri_un_world_population]' type='table'>
          <columns>
            <column datatype='date' date-parse-format='yyyy' name='time' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='postgres.0njyuuu101c2qt1cmsgzg18y0yta' name='agri_un_world_population' table='[public].[agri_un_world_population]' type='table'>
          <columns>
            <column datatype='date' date-parse-format='yyyy' name='time' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[agri_un_world_population]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[agri_un_world_population_37ECBD70B80C4BAF8278F310DD635F65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>variant</remote-name>
            <remote-type>129</remote-type>
            <local-name>[variant]</local-name>
            <parent-name>[agri_un_world_population]</parent-name>
            <remote-alias>variant</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[agri_un_world_population_37ECBD70B80C4BAF8278F310DD635F65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time</remote-name>
            <remote-type>7</remote-type>
            <local-name>[time]</local-name>
            <parent-name>[agri_un_world_population]</parent-name>
            <remote-alias>time</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[agri_un_world_population_37ECBD70B80C4BAF8278F310DD635F65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>poptotal</remote-name>
            <remote-type>5</remote-type>
            <local-name>[poptotal]</local-name>
            <parent-name>[agri_un_world_population]</parent-name>
            <remote-alias>poptotal</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[agri_un_world_population_37ECBD70B80C4BAF8278F310DD635F65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Germany Population Totals' datatype='real' name='[Calculation_2488238855129260052]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [location]&#10;WHEN &quot;Germany&quot; THEN [poptotal] * 1000 END' />
      </column>
      <column caption='Population Calculation Germany' datatype='real' name='[Calculation_2488238855133483029]' role='dimension' type='quantitative'>
        <calculation class='tableau' formula='IF [location] == &quot;Germany&quot; AND [variant] == &quot;Medium&quot; THEN [poptotal] END' />
      </column>
      <column caption='Germany Medium' datatype='boolean' name='[Calculation_2488238855143628831]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[location] == &quot;Germany&quot; AND [variant] == &quot;Medium&quot;' />
      </column>
      <column caption='Germany population in selected year' datatype='real' name='[Calculation_2488238855321174050]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [location] == &quot;Germany&quot; AND [variant] == &quot;Medium&quot; AND [time] == DATE([Parameters].[Year Parameter]) THEN [poptotal] END' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='agri_un_world_population' datatype='table' name='[__tableau_internal_object_id__].[agri_un_world_population_37ECBD70B80C4BAF8278F310DD635F65]' role='measure' type='quantitative' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column caption='Poptotal' datatype='real' name='[poptotal]' role='measure' type='quantitative' />
      <column caption='Year' datatype='date' datatype-customized='true' name='[time]' role='dimension' type='quantitative' />
      <column caption='Variant' datatype='string' name='[variant]' role='dimension' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <datasource-dependencies datasource='Parameters'>
        <column caption='Year Parameter' datatype='date' name='[Year Parameter]' param-domain-type='list' role='measure' type='quantitative' value='#2005-01-01#'>
          <calculation class='tableau' formula='#2005-01-01#' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='agri_un_world_population' id='agri_un_world_population_37ECBD70B80C4BAF8278F310DD635F65'>
            <properties context=''>
              <relation connection='postgres.0njyuuu101c2qt1cmsgzg18y0yta' name='agri_un_world_population' table='[public].[agri_un_world_population]' type='table'>
                <columns>
                  <column datatype='date' date-parse-format='yyyy' name='time' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='agri_ifeu_foodprint (capstone_pool)' inline='true' name='federated.1gljgup0kskuxa1b2koqk0irfzmm' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='db-postgresql-fra1-70962-do-user-8861194-0.b.db.ondigitalocean.com' name='postgres.1vu6si41vt5tkc11d61fl1hih9ps'>
            <connection authentication='username-password' class='postgres' dbname='capstone_pool' one-time-sql='' port='25061' server='db-postgresql-fra1-70962-do-user-8861194-0.b.db.ondigitalocean.com' sslmode='require' username='dauser' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='postgres.1vu6si41vt5tkc11d61fl1hih9ps' name='agri_ifeu_foodprint' table='[public].[agri_ifeu_foodprint]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='postgres.1vu6si41vt5tkc11d61fl1hih9ps' name='agri_ifeu_foodprint' table='[public].[agri_ifeu_foodprint]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>food</remote-name>
            <remote-type>129</remote-type>
            <local-name>[food]</local-name>
            <parent-name>[agri_ifeu_foodprint]</parent-name>
            <remote-alias>food</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[agri_ifeu_foodprint_0B38E37639554705869CB48A48474694]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>co2_footprint</remote-name>
            <remote-type>5</remote-type>
            <local-name>[co2_footprint]</local-name>
            <parent-name>[agri_ifeu_foodprint]</parent-name>
            <remote-alias>co2_footprint</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[agri_ifeu_foodprint_0B38E37639554705869CB48A48474694]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[category]</local-name>
            <parent-name>[agri_ifeu_foodprint]</parent-name>
            <remote-alias>category</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[agri_ifeu_foodprint_0B38E37639554705869CB48A48474694]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>phosphate_rock_footprint</remote-name>
            <remote-type>5</remote-type>
            <local-name>[phosphate_rock_footprint]</local-name>
            <parent-name>[agri_ifeu_foodprint]</parent-name>
            <remote-alias>phosphate_rock_footprint</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[agri_ifeu_foodprint_0B38E37639554705869CB48A48474694]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>land_use_footprint</remote-name>
            <remote-type>5</remote-type>
            <local-name>[land_use_footprint]</local-name>
            <parent-name>[agri_ifeu_foodprint]</parent-name>
            <remote-alias>land_use_footprint</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[agri_ifeu_foodprint_0B38E37639554705869CB48A48474694]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>water_footprint</remote-name>
            <remote-type>129</remote-type>
            <local-name>[water_footprint]</local-name>
            <parent-name>[agri_ifeu_foodprint]</parent-name>
            <remote-alias>water_footprint</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[agri_ifeu_foodprint_0B38E37639554705869CB48A48474694]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>energy_demand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[energy_demand]</local-name>
            <parent-name>[agri_ifeu_foodprint]</parent-name>
            <remote-alias>energy_demand</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[agri_ifeu_foodprint_0B38E37639554705869CB48A48474694]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>comments</remote-name>
            <remote-type>129</remote-type>
            <local-name>[comments]</local-name>
            <parent-name>[agri_ifeu_foodprint]</parent-name>
            <remote-alias>comments</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[agri_ifeu_foodprint_0B38E37639554705869CB48A48474694]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>short_list</remote-name>
            <remote-type>5</remote-type>
            <local-name>[short_list]</local-name>
            <parent-name>[agri_ifeu_foodprint]</parent-name>
            <remote-alias>short_list</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[agri_ifeu_foodprint_0B38E37639554705869CB48A48474694]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dbv_group</remote-name>
            <remote-type>5</remote-type>
            <local-name>[dbv_group]</local-name>
            <parent-name>[agri_ifeu_foodprint]</parent-name>
            <remote-alias>dbv_group</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[agri_ifeu_foodprint_0B38E37639554705869CB48A48474694]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='CO2 by group' datatype='real' name='[Calculation_415246020989677569]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Parameters].[Dbv Group (Agri Dbv Consumption) Parameter] == 1 THEN [co2_footprint]&#10;ELSEIF  [Parameters].[Dbv Group (Agri Dbv Consumption) Parameter] == 2 THEN [co2_footprint]&#10;ELSEIF  [Parameters].[Dbv Group (Agri Dbv Consumption) Parameter] == 3 THEN [co2_footprint]&#10;ELSEIF  [Parameters].[Dbv Group (Agri Dbv Consumption) Parameter] == 4 THEN [co2_footprint]&#10;ELSEIF  [Parameters].[Dbv Group (Agri Dbv Consumption) Parameter] == 5 THEN [co2_footprint]&#10;ELSEIF  [Parameters].[Dbv Group (Agri Dbv Consumption) Parameter] == 6 THEN [co2_footprint]&#10;ELSEIF  [Parameters].[Dbv Group (Agri Dbv Consumption) Parameter] == 7 THEN [co2_footprint]&#10;ELSEIF  [Parameters].[Dbv Group (Agri Dbv Consumption) Parameter] == 8 THEN [co2_footprint]&#10;ELSEIF  [Parameters].[Dbv Group (Agri Dbv Consumption) Parameter] == 9 THEN [co2_footprint]&#10;ELSEIF  [Parameters].[Dbv Group (Agri Dbv Consumption) Parameter] == 10 THEN [co2_footprint]&#10;END' />
      </column>
      <column caption='Dairy CO2' datatype='real' name='[Calculation_415246021010485250]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [dbv_group] == 1 THEN [Calculation_415246020989677569] END' />
      </column>
      <column caption='Dairy CO2 1900' datatype='real' name='[Calculation_415246021010800643]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_415246021010485250] * SUM([federated.1tl4urc06zspc813t0gno1co3qr6].[Calculation_415246021011652614])' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='agri_ifeu_foodprint' datatype='table' name='[__tableau_internal_object_id__].[agri_ifeu_foodprint_0B38E37639554705869CB48A48474694]' role='measure' type='quantitative' />
      <column caption='Category' datatype='string' name='[category]' role='dimension' type='nominal' />
      <column caption='Co2 Footprint' datatype='real' name='[co2_footprint]' role='measure' type='quantitative' />
      <column caption='Comments' datatype='string' name='[comments]' role='dimension' type='nominal' />
      <column caption='Dbv Group' datatype='real' name='[dbv_group]' role='measure' type='quantitative' />
      <column caption='Energy Demand' datatype='real' name='[energy_demand]' role='measure' type='quantitative' />
      <column caption='Food' datatype='string' name='[food]' role='dimension' type='nominal' />
      <column caption='Land Use Footprint' datatype='real' name='[land_use_footprint]' role='measure' type='quantitative' />
      <column caption='Phosphate Rock Footprint' datatype='real' name='[phosphate_rock_footprint]' role='measure' type='quantitative' />
      <column caption='Short List' datatype='real' name='[short_list]' role='measure' type='quantitative' />
      <column caption='Water Footprint' datatype='string' name='[water_footprint]' role='dimension' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <datasource-dependencies datasource='Parameters'>
        <column caption='Dbv Group Parameter' datatype='integer' name='[Dbv Group (Agri Dbv Consumption) Parameter]' param-domain-type='range' role='measure' type='quantitative' value='3'>
          <calculation class='tableau' formula='3' />
          <range max='10' min='1' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='agri_ifeu_foodprint' id='agri_ifeu_foodprint_0B38E37639554705869CB48A48474694'>
            <properties context=''>
              <relation connection='postgres.1vu6si41vt5tkc11d61fl1hih9ps' name='agri_ifeu_foodprint' table='[public].[agri_ifeu_foodprint]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='agri_dbv_consumption (capstone_pool)' inline='true' name='federated.1tl4urc06zspc813t0gno1co3qr6' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='db-postgresql-fra1-70962-do-user-8861194-0.b.db.ondigitalocean.com' name='postgres.0dgcp4q1qcpao71djo1fe0ogfoko'>
            <connection authentication='username-password' class='postgres' dbname='capstone_pool' one-time-sql='' port='25061' server='db-postgresql-fra1-70962-do-user-8861194-0.b.db.ondigitalocean.com' sslmode='require' username='dauser' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[agri_dbv_consumption].[dbv_group]' />
              <expression op='[agri_ifeu_foodprint].[dbv_group]' />
            </expression>
          </clause>
          <relation connection='postgres.0dgcp4q1qcpao71djo1fe0ogfoko' name='agri_dbv_consumption' table='[public].[agri_dbv_consumption]' type='table' />
          <relation connection='postgres.0dgcp4q1qcpao71djo1fe0ogfoko' name='agri_ifeu_foodprint' table='[public].[agri_ifeu_foodprint]' type='table' />
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[agri_dbv_consumption].[dbv_group]' />
              <expression op='[agri_ifeu_foodprint].[dbv_group]' />
            </expression>
          </clause>
          <relation connection='postgres.0dgcp4q1qcpao71djo1fe0ogfoko' name='agri_dbv_consumption' table='[public].[agri_dbv_consumption]' type='table' />
          <relation connection='postgres.0dgcp4q1qcpao71djo1fe0ogfoko' name='agri_ifeu_foodprint' table='[public].[agri_ifeu_foodprint]' type='table' />
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[category]' value='[agri_ifeu_foodprint].[category]' />
          <map key='[co2_footprint]' value='[agri_ifeu_foodprint].[co2_footprint]' />
          <map key='[comments]' value='[agri_ifeu_foodprint].[comments]' />
          <map key='[dbv_group (agri_ifeu_foodprint)]' value='[agri_ifeu_foodprint].[dbv_group]' />
          <map key='[dbv_group]' value='[agri_dbv_consumption].[dbv_group]' />
          <map key='[energy_demand]' value='[agri_ifeu_foodprint].[energy_demand]' />
          <map key='[food]' value='[agri_ifeu_foodprint].[food]' />
          <map key='[food_product]' value='[agri_dbv_consumption].[food_product]' />
          <map key='[kg_per_person_in_1900]' value='[agri_dbv_consumption].[kg_per_person_in_1900]' />
          <map key='[kg_per_person_in_2019]' value='[agri_dbv_consumption].[kg_per_person_in_2019]' />
          <map key='[land_use_footprint]' value='[agri_ifeu_foodprint].[land_use_footprint]' />
          <map key='[phosphate_rock_footprint]' value='[agri_ifeu_foodprint].[phosphate_rock_footprint]' />
          <map key='[short_list]' value='[agri_ifeu_foodprint].[short_list]' />
          <map key='[water_footprint]' value='[agri_ifeu_foodprint].[water_footprint]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>food_product</remote-name>
            <remote-type>129</remote-type>
            <local-name>[food_product]</local-name>
            <parent-name>[agri_dbv_consumption]</parent-name>
            <remote-alias>food_product</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[agri_dbv_consumption_069B17CA4E5241D7B4C9BD3C67E58C96]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>kg_per_person_in_1900</remote-name>
            <remote-type>5</remote-type>
            <local-name>[kg_per_person_in_1900]</local-name>
            <parent-name>[agri_dbv_consumption]</parent-name>
            <remote-alias>kg_per_person_in_1900</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[agri_dbv_consumption_069B17CA4E5241D7B4C9BD3C67E58C96]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>kg_per_person_in_2019</remote-name>
            <remote-type>5</remote-type>
            <local-name>[kg_per_person_in_2019]</local-name>
            <parent-name>[agri_dbv_consumption]</parent-name>
            <remote-alias>kg_per_person_in_2019</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[agri_dbv_consumption_069B17CA4E5241D7B4C9BD3C67E58C96]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dbv_group</remote-name>
            <remote-type>20</remote-type>
            <local-name>[dbv_group]</local-name>
            <parent-name>[agri_dbv_consumption]</parent-name>
            <remote-alias>dbv_group</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[agri_dbv_consumption_069B17CA4E5241D7B4C9BD3C67E58C96]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>food</remote-name>
            <remote-type>129</remote-type>
            <local-name>[food]</local-name>
            <parent-name>[agri_ifeu_foodprint]</parent-name>
            <remote-alias>food</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[agri_dbv_consumption_069B17CA4E5241D7B4C9BD3C67E58C96]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>co2_footprint</remote-name>
            <remote-type>5</remote-type>
            <local-name>[co2_footprint]</local-name>
            <parent-name>[agri_ifeu_foodprint]</parent-name>
            <remote-alias>co2_footprint</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[agri_dbv_consumption_069B17CA4E5241D7B4C9BD3C67E58C96]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[category]</local-name>
            <parent-name>[agri_ifeu_foodprint]</parent-name>
            <remote-alias>category</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[agri_dbv_consumption_069B17CA4E5241D7B4C9BD3C67E58C96]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>phosphate_rock_footprint</remote-name>
            <remote-type>5</remote-type>
            <local-name>[phosphate_rock_footprint]</local-name>
            <parent-name>[agri_ifeu_foodprint]</parent-name>
            <remote-alias>phosphate_rock_footprint</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[agri_dbv_consumption_069B17CA4E5241D7B4C9BD3C67E58C96]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>land_use_footprint</remote-name>
            <remote-type>5</remote-type>
            <local-name>[land_use_footprint]</local-name>
            <parent-name>[agri_ifeu_foodprint]</parent-name>
            <remote-alias>land_use_footprint</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[agri_dbv_consumption_069B17CA4E5241D7B4C9BD3C67E58C96]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>water_footprint</remote-name>
            <remote-type>129</remote-type>
            <local-name>[water_footprint]</local-name>
            <parent-name>[agri_ifeu_foodprint]</parent-name>
            <remote-alias>water_footprint</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[agri_dbv_consumption_069B17CA4E5241D7B4C9BD3C67E58C96]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>energy_demand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[energy_demand]</local-name>
            <parent-name>[agri_ifeu_foodprint]</parent-name>
            <remote-alias>energy_demand</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[agri_dbv_consumption_069B17CA4E5241D7B4C9BD3C67E58C96]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>comments</remote-name>
            <remote-type>129</remote-type>
            <local-name>[comments]</local-name>
            <parent-name>[agri_ifeu_foodprint]</parent-name>
            <remote-alias>comments</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[agri_dbv_consumption_069B17CA4E5241D7B4C9BD3C67E58C96]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>short_list</remote-name>
            <remote-type>5</remote-type>
            <local-name>[short_list]</local-name>
            <parent-name>[agri_ifeu_foodprint]</parent-name>
            <remote-alias>short_list</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[agri_dbv_consumption_069B17CA4E5241D7B4C9BD3C67E58C96]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dbv_group</remote-name>
            <remote-type>5</remote-type>
            <local-name>[dbv_group (agri_ifeu_foodprint)]</local-name>
            <parent-name>[agri_ifeu_foodprint]</parent-name>
            <remote-alias>dbv_group</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[agri_dbv_consumption_069B17CA4E5241D7B4C9BD3C67E58C96]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Calculation1' datatype='real' name='[Calculation_415246020984119296]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Parameters].[Dbv Group (Agri Dbv Consumption) Parameter] == 1 THEN [federated.1gljgup0kskuxa1b2koqk0irfzmm].[Calculation_415246020989677569] * [kg_per_person_in_1900]&#10;ELSEIF  [Parameters].[Dbv Group (Agri Dbv Consumption) Parameter] == 2 THEN [federated.1gljgup0kskuxa1b2koqk0irfzmm].[Calculation_415246020989677569] * [kg_per_person_in_1900]&#10;ELSEIF  [Parameters].[Dbv Group (Agri Dbv Consumption) Parameter] == 3 THEN [federated.1gljgup0kskuxa1b2koqk0irfzmm].[Calculation_415246020989677569] * [kg_per_person_in_1900]&#10;ELSEIF  [Parameters].[Dbv Group (Agri Dbv Consumption) Parameter] == 4 THEN [federated.1gljgup0kskuxa1b2koqk0irfzmm].[Calculation_415246020989677569] * [kg_per_person_in_1900]&#10;ELSEIF  [Parameters].[Dbv Group (Agri Dbv Consumption) Parameter] == 5 THEN [federated.1gljgup0kskuxa1b2koqk0irfzmm].[Calculation_415246020989677569] * [kg_per_person_in_1900]&#10;ELSEIF  [Parameters].[Dbv Group (Agri Dbv Consumption) Parameter] == 6 THEN [federated.1gljgup0kskuxa1b2koqk0irfzmm].[Calculation_415246020989677569] * [kg_per_person_in_1900]&#10;ELSEIF  [Parameters].[Dbv Group (Agri Dbv Consumption) Parameter] == 7 THEN [federated.1gljgup0kskuxa1b2koqk0irfzmm].[Calculation_415246020989677569] * [kg_per_person_in_1900]&#10;ELSEIF  [Parameters].[Dbv Group (Agri Dbv Consumption) Parameter] == 8 THEN [federated.1gljgup0kskuxa1b2koqk0irfzmm].[Calculation_415246020989677569] * [kg_per_person_in_1900]&#10;ELSEIF  [Parameters].[Dbv Group (Agri Dbv Consumption) Parameter] == 9 THEN [federated.1gljgup0kskuxa1b2koqk0irfzmm].[Calculation_415246020989677569] * [kg_per_person_in_1900]&#10;ELSEIF  [Parameters].[Dbv Group (Agri Dbv Consumption) Parameter] == 10 THEN [federated.1gljgup0kskuxa1b2koqk0irfzmm].[Calculation_415246020989677569] * [kg_per_person_in_1900]&#10;END' />
      </column>
      <column caption='Dairy 1900' datatype='real' name='[Calculation_415246021011652614]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM(IF [dbv_group] == 1 THEN [kg_per_person_in_1900] END)' />
      </column>
      <column caption='CO2 per Food product' datatype='real' name='[Calculation_415246021015896073]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[kg_per_person_in_1900] * [co2_footprint]' />
      </column>
      <column caption='Co2 emissions per food in 1900' datatype='real' name='[Calculation_415246021019066379]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[kg_per_person_in_1900] * [co2_footprint]' />
      </column>
      <column caption='CO2 per emissions per food in 2019' datatype='real' name='[Calculation_415246021019471884]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[kg_per_person_in_2019] * [co2_footprint]' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='agri_dbv_consumption' datatype='table' name='[__tableau_internal_object_id__].[agri_dbv_consumption_069B17CA4E5241D7B4C9BD3C67E58C96]' role='measure' type='quantitative' />
      <column caption='Category' datatype='string' name='[category]' role='dimension' type='nominal' />
      <column caption='Co2 Footprint' datatype='real' name='[co2_footprint]' role='measure' type='quantitative' />
      <column caption='Comments' datatype='string' name='[comments]' role='dimension' type='nominal' />
      <column caption='Dbv Group (Agri Ifeu Foodprint)' datatype='real' name='[dbv_group (agri_ifeu_foodprint)]' role='measure' type='quantitative' />
      <column caption='Dbv Group' datatype='integer' name='[dbv_group]' role='measure' type='quantitative' />
      <column caption='Energy Demand' datatype='real' name='[energy_demand]' role='measure' type='quantitative' />
      <column caption='Food' datatype='string' name='[food]' role='dimension' type='nominal' />
      <column caption='Food Product' datatype='string' name='[food_product]' role='dimension' type='nominal' />
      <column caption='Kg Per Person In 1900' datatype='real' name='[kg_per_person_in_1900]' role='measure' type='quantitative' />
      <column caption='Kg Per Person In 2019' datatype='real' name='[kg_per_person_in_2019]' role='measure' type='quantitative' />
      <column caption='Land Use Footprint' datatype='real' name='[land_use_footprint]' role='measure' type='quantitative' />
      <column caption='Phosphate Rock Footprint' datatype='real' name='[phosphate_rock_footprint]' role='measure' type='quantitative' />
      <column caption='Short List' datatype='real' name='[short_list]' role='measure' type='quantitative' />
      <column caption='Water Footprint' datatype='string' name='[water_footprint]' role='dimension' type='nominal' />
      <column-instance column='[food_product]' derivation='None' name='[none:food_product:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:food_product:nk]' palette='tableau20_10_0' type='palette'>
            <map to='#59a14f'>
              <bucket>&quot;Vegetables, salad&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fish&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>%all%</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Fruits&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bread&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Oils, fats&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Potatoes&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Meat&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Milk, Butter, Cheese&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eggs (items)&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:food_product:nk]&#10;[:Measure Names]' type='palette'>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Bread&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>%all%</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Fruits&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Oils, fats&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Fish&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Eggs (items)&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Potatoes&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Vegetables, salad&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Milk, Butter, Cheese&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Meat&quot;</bucket>
            </map-pri>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='agri_dbv_consumption' id='agri_dbv_consumption_069B17CA4E5241D7B4C9BD3C67E58C96'>
            <properties context=''>
              <relation join='inner' type='join'>
                <clause type='join'>
                  <expression op='='>
                    <expression op='[agri_dbv_consumption].[dbv_group]' />
                    <expression op='[agri_ifeu_foodprint].[dbv_group]' />
                  </expression>
                </clause>
                <relation connection='postgres.0dgcp4q1qcpao71djo1fe0ogfoko' name='agri_dbv_consumption' table='[public].[agri_dbv_consumption]' type='table' />
                <relation connection='postgres.0dgcp4q1qcpao71djo1fe0ogfoko' name='agri_ifeu_foodprint' table='[public].[agri_ifeu_foodprint]' type='table' />
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='agri_chicken_beef (capstone_pool)' inline='true' name='federated.0ws19ki0b4q9850zrwrxa0bbrmgy' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='db-postgresql-fra1-70962-do-user-8861194-0.b.db.ondigitalocean.com' name='postgres.03i0ph010iuqj80zu1myf1datg02'>
            <connection authentication='username-password' class='postgres' dbname='capstone_pool' one-time-sql='' port='25061' server='db-postgresql-fra1-70962-do-user-8861194-0.b.db.ondigitalocean.com' sslmode='require' username='dauser' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='postgres.03i0ph010iuqj80zu1myf1datg02' name='agri_chicken_beef' table='[public].[agri_chicken_beef]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='postgres.03i0ph010iuqj80zu1myf1datg02' name='agri_chicken_beef' table='[public].[agri_chicken_beef]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>co2_emissions</remote-name>
            <remote-type>129</remote-type>
            <local-name>[co2_emissions]</local-name>
            <parent-name>[agri_chicken_beef]</parent-name>
            <remote-alias>co2_emissions</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[agri_chicken_beef_E0C1DFC42105440A9DA7AA55E2831331]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>beef_average</remote-name>
            <remote-type>5</remote-type>
            <local-name>[beef_average]</local-name>
            <parent-name>[agri_chicken_beef]</parent-name>
            <remote-alias>beef_average</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[agri_chicken_beef_E0C1DFC42105440A9DA7AA55E2831331]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>chicken_with_transport,_storage_and_packaging</remote-name>
            <remote-type>5</remote-type>
            <local-name>[chicken_with_transport,_storage_and_packaging]</local-name>
            <parent-name>[agri_chicken_beef]</parent-name>
            <remote-alias>chicken_with_transport,_storage_and_packaging</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[agri_chicken_beef_E0C1DFC42105440A9DA7AA55E2831331]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='agri_chicken_beef' datatype='table' name='[__tableau_internal_object_id__].[agri_chicken_beef_E0C1DFC42105440A9DA7AA55E2831331]' role='measure' type='quantitative' />
      <column caption='Beef Average' datatype='real' name='[beef_average]' role='measure' type='quantitative' />
      <column caption='Chicken With Transport, Storage And Packaging' datatype='real' name='[chicken_with_transport,_storage_and_packaging]' role='measure' type='quantitative' />
      <column caption='Co2 Emissions' datatype='string' name='[co2_emissions]' role='dimension' type='nominal' />
      <column-instance column='[co2_emissions]' derivation='None' name='[none:co2_emissions:nk]' pivot='key' type='nominal' />
      <column-instance column='[beef_average]' derivation='Sum' name='[sum:beef_average:qk]' pivot='key' type='quantitative' />
      <column-instance column='[chicken_with_transport,_storage_and_packaging]' derivation='Sum' name='[sum:chicken_with_transport,_storage_and_packaging:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0ws19ki0b4q9850zrwrxa0bbrmgy].[sum:average_co2:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0ws19ki0b4q9850zrwrxa0bbrmgy].[sum:beef_average:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0ws19ki0b4q9850zrwrxa0bbrmgy].[__tableau_internal_object_id__].[cnt:agri_chicken_beef_18BDBE2B08364460B00DF81D0EB37178:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0ws19ki0b4q9850zrwrxa0bbrmgy]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0ws19ki0b4q9850zrwrxa0bbrmgy].[sum:storage:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0ws19ki0b4q9850zrwrxa0bbrmgy].[sum:chicken_with_transport,_storage_and_packaging:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0ws19ki0b4q9850zrwrxa0bbrmgy].[sum:packaging:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:co2_emissions:nk]' type='palette'>
            <map to='#59a14f'>
              <bucket>&quot;Average&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Transport from New Zealand&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Storage&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Packaging&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='agri_chicken_beef' id='agri_chicken_beef_E0C1DFC42105440A9DA7AA55E2831331'>
            <properties context=''>
              <relation connection='postgres.03i0ph010iuqj80zu1myf1datg02' name='agri_chicken_beef' table='[public].[agri_chicken_beef]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='agri_umweltbundesamt_emissions (capstone_pool)' inline='true' name='federated.0v2w9ps1ob43r912r7dwc06p627m' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='db-postgresql-fra1-70962-do-user-8861194-0.b.db.ondigitalocean.com' name='postgres.02owm690d8jk7i1apx5l818mnxa1'>
            <connection authentication='username-password' class='postgres' dbname='capstone_pool' one-time-sql='' port='25061' server='db-postgresql-fra1-70962-do-user-8861194-0.b.db.ondigitalocean.com' sslmode='require' username='dauser' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='postgres.02owm690d8jk7i1apx5l818mnxa1' name='agri_umweltbundesamt_emissions' table='[public].[agri_umweltbundesamt_emissions]' type='table'>
          <columns>
            <column datatype='date' date-parse-format='yyyy' name='year' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='postgres.02owm690d8jk7i1apx5l818mnxa1' name='agri_umweltbundesamt_emissions' table='[public].[agri_umweltbundesamt_emissions]' type='table'>
          <columns>
            <column datatype='date' date-parse-format='yyyy' name='year' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>7</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[agri_umweltbundesamt_emissions]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[agri_umweltbundesamt_emissions_18332BD6228D4A84ADAFA9B9A1F0CB2A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[co2]</local-name>
            <parent-name>[agri_umweltbundesamt_emissions]</parent-name>
            <remote-alias>co2</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[agri_umweltbundesamt_emissions_18332BD6228D4A84ADAFA9B9A1F0CB2A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sector</remote-name>
            <remote-type>129</remote-type>
            <local-name>[sector]</local-name>
            <parent-name>[agri_umweltbundesamt_emissions]</parent-name>
            <remote-alias>sector</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[agri_umweltbundesamt_emissions_18332BD6228D4A84ADAFA9B9A1F0CB2A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='agri_umweltbundesamt_emissions' datatype='table' name='[__tableau_internal_object_id__].[agri_umweltbundesamt_emissions_18332BD6228D4A84ADAFA9B9A1F0CB2A]' role='measure' type='quantitative' />
      <column aggregation='CountD' datatype='real' datatype-customized='true' name='[co2]' role='measure' type='quantitative' />
      <column datatype='string' name='[sector]' role='dimension' type='nominal' />
      <column datatype='date' datatype-customized='true' name='[year]' role='dimension' type='ordinal' />
      <column-instance column='[sector]' derivation='None' name='[none:sector:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:sector:nk]' type='palette'>
            <map to='#59a14f'>
              <bucket>&quot;Agriculture&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Landwirtschaft&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Abfallwirtschaft und Sonstiges&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Buildings&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Energiewirtschaft&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Energy&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gebäude&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Industrie&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Industry&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;LULUCF&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Transport&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Verkehr&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Waste management and others&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='agri_umweltbundesamt_emissions' id='agri_umweltbundesamt_emissions_18332BD6228D4A84ADAFA9B9A1F0CB2A'>
            <properties context=''>
              <relation connection='postgres.02owm690d8jk7i1apx5l818mnxa1' name='agri_umweltbundesamt_emissions' table='[public].[agri_umweltbundesamt_emissions]' type='table'>
                <columns>
                  <column datatype='date' date-parse-format='yyyy' name='year' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='agri_dbv_consumption2+ (capstone_pool)' inline='true' name='federated.0m61kwm1ylmubb1d03y4y1hyzvtb' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='db-postgresql-fra1-70962-do-user-8861194-0.b.db.ondigitalocean.com' name='postgres.0nwq2ys1urjps513jbmij0v5d9d9'>
            <connection authentication='username-password' class='postgres' dbname='capstone_pool' one-time-sql='' port='25061' server='db-postgresql-fra1-70962-do-user-8861194-0.b.db.ondigitalocean.com' sslmode='require' username='dauser' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[agri_dbv_consumption2].[dbv_group]' />
              <expression op='[agri_ifeu_foodprint].[dbv_group]' />
            </expression>
          </clause>
          <relation connection='postgres.0nwq2ys1urjps513jbmij0v5d9d9' name='agri_dbv_consumption2' table='[public].[agri_dbv_consumption2]' type='table'>
            <columns>
              <column datatype='date' date-parse-format='yyyy' name='year' />
            </columns>
          </relation>
          <relation connection='postgres.0nwq2ys1urjps513jbmij0v5d9d9' name='agri_ifeu_foodprint' table='[public].[agri_ifeu_foodprint]' type='table' />
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[agri_dbv_consumption2].[dbv_group]' />
              <expression op='[agri_ifeu_foodprint].[dbv_group]' />
            </expression>
          </clause>
          <relation connection='postgres.0nwq2ys1urjps513jbmij0v5d9d9' name='agri_dbv_consumption2' table='[public].[agri_dbv_consumption2]' type='table'>
            <columns>
              <column datatype='date' date-parse-format='yyyy' name='year' />
            </columns>
          </relation>
          <relation connection='postgres.0nwq2ys1urjps513jbmij0v5d9d9' name='agri_ifeu_foodprint' table='[public].[agri_ifeu_foodprint]' type='table' />
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[category]' value='[agri_ifeu_foodprint].[category]' />
          <map key='[co2_footprint]' value='[agri_ifeu_foodprint].[co2_footprint]' />
          <map key='[comments]' value='[agri_ifeu_foodprint].[comments]' />
          <map key='[dbv_group (agri_ifeu_foodprint)]' value='[agri_ifeu_foodprint].[dbv_group]' />
          <map key='[dbv_group]' value='[agri_dbv_consumption2].[dbv_group]' />
          <map key='[energy_demand]' value='[agri_ifeu_foodprint].[energy_demand]' />
          <map key='[food]' value='[agri_ifeu_foodprint].[food]' />
          <map key='[food_product]' value='[agri_dbv_consumption2].[food_product]' />
          <map key='[kg_per_person]' value='[agri_dbv_consumption2].[kg_per_person]' />
          <map key='[land_use_footprint]' value='[agri_ifeu_foodprint].[land_use_footprint]' />
          <map key='[phosphate_rock_footprint]' value='[agri_ifeu_foodprint].[phosphate_rock_footprint]' />
          <map key='[short_list]' value='[agri_ifeu_foodprint].[short_list]' />
          <map key='[water_footprint]' value='[agri_ifeu_foodprint].[water_footprint]' />
          <map key='[year]' value='[agri_dbv_consumption2].[year]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>food_product</remote-name>
            <remote-type>129</remote-type>
            <local-name>[food_product]</local-name>
            <parent-name>[agri_dbv_consumption2]</parent-name>
            <remote-alias>food_product</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[agri_dbv_consumption2_C8C8BFAD757A4419916DBBAAFF22E95A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>kg_per_person</remote-name>
            <remote-type>5</remote-type>
            <local-name>[kg_per_person]</local-name>
            <parent-name>[agri_dbv_consumption2]</parent-name>
            <remote-alias>kg_per_person</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[agri_dbv_consumption2_C8C8BFAD757A4419916DBBAAFF22E95A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dbv_group</remote-name>
            <remote-type>20</remote-type>
            <local-name>[dbv_group]</local-name>
            <parent-name>[agri_dbv_consumption2]</parent-name>
            <remote-alias>dbv_group</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[agri_dbv_consumption2_C8C8BFAD757A4419916DBBAAFF22E95A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>7</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[agri_dbv_consumption2]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[agri_dbv_consumption2_C8C8BFAD757A4419916DBBAAFF22E95A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>food</remote-name>
            <remote-type>129</remote-type>
            <local-name>[food]</local-name>
            <parent-name>[agri_ifeu_foodprint]</parent-name>
            <remote-alias>food</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[agri_dbv_consumption2_C8C8BFAD757A4419916DBBAAFF22E95A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>co2_footprint</remote-name>
            <remote-type>5</remote-type>
            <local-name>[co2_footprint]</local-name>
            <parent-name>[agri_ifeu_foodprint]</parent-name>
            <remote-alias>co2_footprint</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[agri_dbv_consumption2_C8C8BFAD757A4419916DBBAAFF22E95A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[category]</local-name>
            <parent-name>[agri_ifeu_foodprint]</parent-name>
            <remote-alias>category</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[agri_dbv_consumption2_C8C8BFAD757A4419916DBBAAFF22E95A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>phosphate_rock_footprint</remote-name>
            <remote-type>5</remote-type>
            <local-name>[phosphate_rock_footprint]</local-name>
            <parent-name>[agri_ifeu_foodprint]</parent-name>
            <remote-alias>phosphate_rock_footprint</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[agri_dbv_consumption2_C8C8BFAD757A4419916DBBAAFF22E95A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>land_use_footprint</remote-name>
            <remote-type>5</remote-type>
            <local-name>[land_use_footprint]</local-name>
            <parent-name>[agri_ifeu_foodprint]</parent-name>
            <remote-alias>land_use_footprint</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[agri_dbv_consumption2_C8C8BFAD757A4419916DBBAAFF22E95A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>water_footprint</remote-name>
            <remote-type>129</remote-type>
            <local-name>[water_footprint]</local-name>
            <parent-name>[agri_ifeu_foodprint]</parent-name>
            <remote-alias>water_footprint</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[agri_dbv_consumption2_C8C8BFAD757A4419916DBBAAFF22E95A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>energy_demand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[energy_demand]</local-name>
            <parent-name>[agri_ifeu_foodprint]</parent-name>
            <remote-alias>energy_demand</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[agri_dbv_consumption2_C8C8BFAD757A4419916DBBAAFF22E95A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>comments</remote-name>
            <remote-type>129</remote-type>
            <local-name>[comments]</local-name>
            <parent-name>[agri_ifeu_foodprint]</parent-name>
            <remote-alias>comments</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[agri_dbv_consumption2_C8C8BFAD757A4419916DBBAAFF22E95A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>short_list</remote-name>
            <remote-type>5</remote-type>
            <local-name>[short_list]</local-name>
            <parent-name>[agri_ifeu_foodprint]</parent-name>
            <remote-alias>short_list</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[agri_dbv_consumption2_C8C8BFAD757A4419916DBBAAFF22E95A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dbv_group</remote-name>
            <remote-type>5</remote-type>
            <local-name>[dbv_group (agri_ifeu_foodprint)]</local-name>
            <parent-name>[agri_ifeu_foodprint]</parent-name>
            <remote-alias>dbv_group</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[agri_dbv_consumption2_C8C8BFAD757A4419916DBBAAFF22E95A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='CO2 per product' datatype='real' name='[Calculation_415246021050077198]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[co2_footprint] * [kg_per_person]' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='agri_dbv_consumption2' datatype='table' name='[__tableau_internal_object_id__].[agri_dbv_consumption2_C8C8BFAD757A4419916DBBAAFF22E95A]' role='measure' type='quantitative' />
      <column caption='Category' datatype='string' name='[category]' role='dimension' type='nominal' />
      <column caption='Co2 Footprint' datatype='real' name='[co2_footprint]' role='measure' type='quantitative' />
      <column caption='Comments' datatype='string' name='[comments]' role='dimension' type='nominal' />
      <column caption='Dbv Group (Agri Ifeu Foodprint)' datatype='real' name='[dbv_group (agri_ifeu_foodprint)]' role='measure' type='quantitative' />
      <column caption='Dbv Group' datatype='integer' name='[dbv_group]' role='measure' type='quantitative' />
      <column caption='Energy Demand' datatype='real' name='[energy_demand]' role='measure' type='quantitative' />
      <column caption='Food' datatype='string' name='[food]' role='dimension' type='nominal' />
      <column caption='Food Product' datatype='string' name='[food_product]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;Eggs (items)&quot;' value='Eggs (# of items)' />
        </aliases>
      </column>
      <column caption='Land Use Footprint' datatype='real' name='[land_use_footprint]' role='measure' type='quantitative' />
      <column caption='Phosphate Rock Footprint' datatype='real' name='[phosphate_rock_footprint]' role='measure' type='quantitative' />
      <column caption='Short List' datatype='real' name='[short_list]' role='measure' type='quantitative' />
      <column caption='Water Footprint' datatype='string' name='[water_footprint]' role='dimension' type='nominal' />
      <column caption='Year' datatype='date' datatype-customized='true' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[food_product]' derivation='None' name='[none:food_product:nk]' pivot='key' type='nominal' />
      <column-instance column='[year]' derivation='Year-Trunc' name='[tyr:year:ok]' pivot='key' type='ordinal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0m61kwm1ylmubb1d03y4y1hyzvtb].[avg:kg_per_person_in_1900:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0m61kwm1ylmubb1d03y4y1hyzvtb].[sum:kg_per_person_in_1900:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0m61kwm1ylmubb1d03y4y1hyzvtb]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0m61kwm1ylmubb1d03y4y1hyzvtb].[avg:kg_per_person_in_2019:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0m61kwm1ylmubb1d03y4y1hyzvtb].[sum:kg_per_person_in_2019:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:food_product:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Milk, Butter, Cheese&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vegetables, salad&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Eggs (items)&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Oils, fats&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Meat&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bread&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Fruits&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Potatoes&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Fish&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[tyr:year:ok]' type='palette'>
            <map to='#2ca02c'>
              <bucket>#1900-01-01 00:00:00#</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>#2019-01-01 00:00:00#</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='agri_dbv_consumption2' id='agri_dbv_consumption2_C8C8BFAD757A4419916DBBAAFF22E95A'>
            <properties context=''>
              <relation join='inner' type='join'>
                <clause type='join'>
                  <expression op='='>
                    <expression op='[agri_dbv_consumption2].[dbv_group]' />
                    <expression op='[agri_ifeu_foodprint].[dbv_group]' />
                  </expression>
                </clause>
                <relation connection='postgres.0nwq2ys1urjps513jbmij0v5d9d9' name='agri_dbv_consumption2' table='[public].[agri_dbv_consumption2]' type='table'>
                  <columns>
                    <column datatype='date' date-parse-format='yyyy' name='year' />
                  </columns>
                </relation>
                <relation connection='postgres.0nwq2ys1urjps513jbmij0v5d9d9' name='agri_ifeu_foodprint' table='[public].[agri_ifeu_foodprint]' type='table' />
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1_2508045147174E04A3EF34B528950A31]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Beef vs. chicken' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Co2 Emissions' />
        <param name='target' value='Beef vs. chicken' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Beef vs. chicken'>
      <table>
        <view>
          <datasources>
            <datasource caption='agri_chicken_beef (capstone_pool)' name='federated.0ws19ki0b4q9850zrwrxa0bbrmgy' />
          </datasources>
          <datasource-dependencies datasource='federated.0ws19ki0b4q9850zrwrxa0bbrmgy'>
            <column caption='Beef Average' datatype='real' name='[beef_average]' role='measure' type='quantitative' />
            <column caption='Chicken With Transport, Storage And Packaging' datatype='real' name='[chicken_with_transport,_storage_and_packaging]' role='measure' type='quantitative' />
            <column caption='Co2 Emissions' datatype='string' name='[co2_emissions]' role='dimension' type='nominal' />
            <column-instance column='[co2_emissions]' derivation='None' name='[none:co2_emissions:nk]' pivot='key' type='nominal' />
            <column-instance column='[beef_average]' derivation='Sum' name='[sum:beef_average:qk]' pivot='key' type='quantitative' />
            <column-instance column='[chicken_with_transport,_storage_and_packaging]' derivation='Sum' name='[sum:chicken_with_transport,_storage_and_packaging:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0ws19ki0b4q9850zrwrxa0bbrmgy].[sum:beef_average:qk]' field-type='quantitative' max='15.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.0ws19ki0b4q9850zrwrxa0bbrmgy].[sum:chicken_with_transport,_storage_and_packaging:qk]' field-type='quantitative' max='15.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.0ws19ki0b4q9850zrwrxa0bbrmgy].[sum:beef_average:qk]' scope='rows' value='Beef (avg)' />
            <format attr='title' class='0' field='[federated.0ws19ki0b4q9850zrwrxa0bbrmgy].[sum:chicken_with_transport,_storage_and_packaging:qk]' scope='rows' value='Chicken (avg.) + transport, storage &amp; packaging' />
            <format attr='tick-color' scope='cols' value='#00000000' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='tick-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' scope='rows' value='Arial' />
            <format attr='font-size' scope='rows' value='12' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ws19ki0b4q9850zrwrxa0bbrmgy].[none:co2_emissions:nk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ws19ki0b4q9850zrwrxa0bbrmgy].[sum:beef_average:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ws19ki0b4q9850zrwrxa0bbrmgy].[none:co2_emissions:nk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ws19ki0b4q9850zrwrxa0bbrmgy].[sum:chicken_with_transport,_storage_and_packaging:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ws19ki0b4q9850zrwrxa0bbrmgy].[none:co2_emissions:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0ws19ki0b4q9850zrwrxa0bbrmgy].[sum:beef_average:qk] + [federated.0ws19ki0b4q9850zrwrxa0bbrmgy].[sum:chicken_with_transport,_storage_and_packaging:qk])</rows>
        <cols />
      </table>
      <simple-id uuid='{347DC3EA-B4FC-44C4-AC35-EF183316571E}' />
    </worksheet>
    <worksheet name='CO2 Emissions 1900'>
      <table>
        <view>
          <datasources>
            <datasource caption='agri_dbv_consumption (capstone_pool)' name='federated.1tl4urc06zspc813t0gno1co3qr6' />
          </datasources>
          <datasource-dependencies datasource='federated.1tl4urc06zspc813t0gno1co3qr6'>
            <column caption='Co2 emissions per food in 1900' datatype='real' name='[Calculation_415246021019066379]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[kg_per_person_in_1900] * [co2_footprint]' />
            </column>
            <column-instance column='[Calculation_415246021019066379]' derivation='Avg' name='[avg:Calculation_415246021019066379:qk]' pivot='key' type='quantitative' />
            <column-instance column='[kg_per_person_in_1900]' derivation='Avg' name='[avg:kg_per_person_in_1900:qk]' pivot='key' type='quantitative' />
            <column caption='Co2 Footprint' datatype='real' name='[co2_footprint]' role='measure' type='quantitative' />
            <column caption='Food Product' datatype='string' name='[food_product]' role='dimension' type='nominal' />
            <column caption='Kg Per Person In 1900' datatype='real' name='[kg_per_person_in_1900]' role='measure' type='quantitative' />
            <column-instance column='[food_product]' derivation='None' name='[none:food_product:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1tl4urc06zspc813t0gno1co3qr6].[none:food_product:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1tl4urc06zspc813t0gno1co3qr6].[avg:Calculation_415246021019066379:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='total-label' data-class='total' field='[federated.1tl4urc06zspc813t0gno1co3qr6].[none:food_product:nk]' value='Average' />
          </style-rule>
          <style-rule element='table'>
            <format attr='alternate-text' field='[federated.1tl4urc06zspc813t0gno1co3qr6].[avg:kg_per_person_in_1900:qk]' value='' />
            <format attr='display-alternate-text' field='[federated.1tl4urc06zspc813t0gno1co3qr6].[avg:kg_per_person_in_1900:qk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1tl4urc06zspc813t0gno1co3qr6].[none:food_product:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1tl4urc06zspc813t0gno1co3qr6].[avg:kg_per_person_in_1900:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1tl4urc06zspc813t0gno1co3qr6].[none:food_product:nk]' />
              <text column='[federated.1tl4urc06zspc813t0gno1co3qr6].[avg:kg_per_person_in_1900:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1tl4urc06zspc813t0gno1co3qr6].[avg:Calculation_415246021019066379:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1tl4urc06zspc813t0gno1co3qr6].[none:food_product:nk]' />
              <text column='[federated.1tl4urc06zspc813t0gno1co3qr6].[avg:Calculation_415246021019066379:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1tl4urc06zspc813t0gno1co3qr6].[avg:Calculation_415246021019066379:qk] + [federated.1tl4urc06zspc813t0gno1co3qr6].[avg:kg_per_person_in_1900:qk])</rows>
        <cols total='true'>[federated.1tl4urc06zspc813t0gno1co3qr6].[none:food_product:nk]</cols>
      </table>
      <simple-id uuid='{CEEA1502-70BE-46E0-915E-EE8F2A218A0B}' />
    </worksheet>
    <worksheet name='CO2 Emissions 1900 (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='agri_dbv_consumption (capstone_pool)' name='federated.1tl4urc06zspc813t0gno1co3qr6' />
          </datasources>
          <datasource-dependencies datasource='federated.1tl4urc06zspc813t0gno1co3qr6'>
            <column-instance column='[kg_per_person_in_1900]' derivation='Avg' name='[avg:kg_per_person_in_1900:qk]' pivot='key' type='quantitative' />
            <column caption='Food Product' datatype='string' name='[food_product]' role='dimension' type='nominal' />
            <column caption='Kg Per Person In 1900' datatype='real' name='[kg_per_person_in_1900]' role='measure' type='quantitative' />
            <column-instance column='[food_product]' derivation='None' name='[none:food_product:nk]' pivot='key' type='nominal' />
            <column-instance column='[kg_per_person_in_1900]' derivation='None' name='[none:kg_per_person_in_1900:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1tl4urc06zspc813t0gno1co3qr6].[none:food_product:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1tl4urc06zspc813t0gno1co3qr6].[avg:kg_per_person_in_1900:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='total-label' data-class='total' field='[federated.1tl4urc06zspc813t0gno1co3qr6].[none:food_product:nk]' value='Average' />
          </style-rule>
          <style-rule element='table'>
            <format attr='alternate-text' field='[federated.1tl4urc06zspc813t0gno1co3qr6].[avg:kg_per_person_in_1900:qk]' value='' />
            <format attr='display-alternate-text' field='[federated.1tl4urc06zspc813t0gno1co3qr6].[avg:kg_per_person_in_1900:qk]' value='false' />
            <format attr='alternate-text' field='[federated.1tl4urc06zspc813t0gno1co3qr6].[none:kg_per_person_in_1900:qk]' value='' />
            <format attr='display-alternate-text' field='[federated.1tl4urc06zspc813t0gno1co3qr6].[none:kg_per_person_in_1900:qk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1tl4urc06zspc813t0gno1co3qr6].[none:food_product:nk]' />
              <text column='[federated.1tl4urc06zspc813t0gno1co3qr6].[avg:kg_per_person_in_1900:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1tl4urc06zspc813t0gno1co3qr6].[none:kg_per_person_in_1900:qk]</rows>
        <cols>[federated.1tl4urc06zspc813t0gno1co3qr6].[none:food_product:nk]</cols>
      </table>
      <simple-id uuid='{25743A57-68B4-49F4-A3D9-7B0C257EAD30}' />
    </worksheet>
    <worksheet name='CO2 Emissions 2019'>
      <table>
        <view>
          <datasources>
            <datasource caption='agri_dbv_consumption (capstone_pool)' name='federated.1tl4urc06zspc813t0gno1co3qr6' />
          </datasources>
          <datasource-dependencies datasource='federated.1tl4urc06zspc813t0gno1co3qr6'>
            <column caption='CO2 per emissions per food in 2019' datatype='real' name='[Calculation_415246021019471884]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[kg_per_person_in_2019] * [co2_footprint]' />
            </column>
            <column-instance column='[Calculation_415246021019471884]' derivation='Avg' name='[avg:Calculation_415246021019471884:qk]' pivot='key' type='quantitative' />
            <column-instance column='[kg_per_person_in_1900]' derivation='Avg' name='[avg:kg_per_person_in_1900:qk]' pivot='key' type='quantitative' />
            <column-instance column='[kg_per_person_in_2019]' derivation='Avg' name='[avg:kg_per_person_in_2019:qk]' pivot='key' type='quantitative' />
            <column caption='Co2 Footprint' datatype='real' name='[co2_footprint]' role='measure' type='quantitative' />
            <column caption='Food Product' datatype='string' name='[food_product]' role='dimension' type='nominal' />
            <column caption='Kg Per Person In 1900' datatype='real' name='[kg_per_person_in_1900]' role='measure' type='quantitative' />
            <column caption='Kg Per Person In 2019' datatype='real' name='[kg_per_person_in_2019]' role='measure' type='quantitative' />
            <column-instance column='[food_product]' derivation='None' name='[none:food_product:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1tl4urc06zspc813t0gno1co3qr6].[none:food_product:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1tl4urc06zspc813t0gno1co3qr6].[avg:Calculation_415246021019471884:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1tl4urc06zspc813t0gno1co3qr6].[avg:kg_per_person_in_2019:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='render-fold-reversed' value='true' />
            <format attr='width' field='[federated.1tl4urc06zspc813t0gno1co3qr6].[avg:kg_per_person_in_1900:qk]' value='18' />
            <format attr='width' field='[federated.1tl4urc06zspc813t0gno1co3qr6].[avg:kg_per_person_in_2019:qk]' value='18' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1tl4urc06zspc813t0gno1co3qr6].[none:food_product:nk]' value='69' />
          </style-rule>
          <style-rule element='header'>
            <format attr='total-label' data-class='total' field='[federated.1tl4urc06zspc813t0gno1co3qr6].[none:food_product:nk]' value='Average' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1tl4urc06zspc813t0gno1co3qr6].[none:food_product:nk]' />
              <color column='[federated.1tl4urc06zspc813t0gno1co3qr6].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1tl4urc06zspc813t0gno1co3qr6].[avg:kg_per_person_in_2019:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1tl4urc06zspc813t0gno1co3qr6].[none:food_product:nk]' />
              <text column='[federated.1tl4urc06zspc813t0gno1co3qr6].[avg:kg_per_person_in_2019:qk]' />
              <color column='[federated.1tl4urc06zspc813t0gno1co3qr6].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1tl4urc06zspc813t0gno1co3qr6].[avg:kg_per_person_in_1900:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1tl4urc06zspc813t0gno1co3qr6].[none:food_product:nk]' />
              <color column='[federated.1tl4urc06zspc813t0gno1co3qr6].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.73563534021377563' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1tl4urc06zspc813t0gno1co3qr6].[avg:kg_per_person_in_1900:qk] + [federated.1tl4urc06zspc813t0gno1co3qr6].[avg:kg_per_person_in_2019:qk])</rows>
        <cols total='true'>[federated.1tl4urc06zspc813t0gno1co3qr6].[none:food_product:nk]</cols>
      </table>
      <simple-id uuid='{6DE68285-FBE7-44AE-86AB-8205CC0DF6FB}' />
    </worksheet>
    <worksheet name='CO2 per sector in Germany 2020'>
      <table>
        <view>
          <datasources>
            <datasource caption='agri_umweltbundesamt_emissions (capstone_pool)' name='federated.0v2w9ps1ob43r912r7dwc06p627m' />
          </datasources>
          <datasource-dependencies datasource='federated.0v2w9ps1ob43r912r7dwc06p627m'>
            <column aggregation='CountD' datatype='real' datatype-customized='true' name='[co2]' role='measure' type='quantitative' />
            <column-instance column='[co2]' derivation='Max' name='[max:co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[sector]' derivation='None' name='[none:sector:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[sector]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0v2w9ps1ob43r912r7dwc06p627m].[max:co2:qk]' included-values='in-range-or-null'>
            <min>2.2250738585072014e-308</min>
          </filter>
          <slices>
            <column>[federated.0v2w9ps1ob43r912r7dwc06p627m].[max:co2:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='font-family' data-class='subtotal' scope='cols' value='Waseem' />
            <format attr='font-family' data-class='subtotal' scope='rows' value='Trattatello' />
            <format attr='font-size' field='[federated.0v2w9ps1ob43r912r7dwc06p627m].[none:sector:nk]' value='16' />
          </style-rule>
          <style-rule element='header'>
            <format attr='font-size' data-class='subtotal' field='[federated.0v2w9ps1ob43r912r7dwc06p627m].[none:sector:nk]' value='16' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' scope='cols' value='Arial' />
            <format attr='font-family' scope='rows' value='Trattatello' />
            <format attr='font-size' scope='cols' value='10' />
            <format attr='font-size' field='[federated.0v2w9ps1ob43r912r7dwc06p627m].[none:sector:nk]' value='18' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='15' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-family' value='Arial' />
          </style-rule>
          <style-rule element='tooltip'>
            <format attr='font-family' value='Arial' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.0v2w9ps1ob43r912r7dwc06p627m].[max:co2:qk]' />
              <color column='[federated.0v2w9ps1ob43r912r7dwc06p627m].[none:sector:nk]' />
              <text column='[federated.0v2w9ps1ob43r912r7dwc06p627m].[none:sector:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{37B035E1-89C3-44A7-8A86-A67941EA340E}' />
    </worksheet>
    <worksheet name='CO2 per sector in Germany 2020 (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='agri_umweltbundesamt_emissions (capstone_pool)' name='federated.0v2w9ps1ob43r912r7dwc06p627m' />
          </datasources>
          <datasource-dependencies datasource='federated.0v2w9ps1ob43r912r7dwc06p627m'>
            <column aggregation='CountD' datatype='real' datatype-customized='true' name='[co2]' role='measure' type='quantitative' />
            <column-instance column='[sector]' derivation='None' name='[none:sector:nk]' pivot='key' type='nominal' />
            <column-instance column='[co2]' derivation='Sum' name='[pcto:sum:co2:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column datatype='string' name='[sector]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0v2w9ps1ob43r912r7dwc06p627m].[none:sector:nk]'>
            <groupfilter function='level-members' level='[none:sector:nk]' />
          </filter>
          <slices>
            <column>[federated.0v2w9ps1ob43r912r7dwc06p627m].[none:sector:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='font-family' data-class='subtotal' scope='cols' value='Waseem' />
            <format attr='font-family' data-class='subtotal' scope='rows' value='Trattatello' />
            <format attr='font-size' field='[federated.0v2w9ps1ob43r912r7dwc06p627m].[none:sector:nk]' value='16' />
          </style-rule>
          <style-rule element='header'>
            <format attr='font-size' data-class='subtotal' field='[federated.0v2w9ps1ob43r912r7dwc06p627m].[none:sector:nk]' value='16' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' scope='cols' value='Arial' />
            <format attr='font-family' scope='rows' value='Trattatello' />
            <format attr='font-size' scope='cols' value='10' />
            <format attr='font-size' field='[federated.0v2w9ps1ob43r912r7dwc06p627m].[none:sector:nk]' value='18' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='15' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-family' value='Arial' />
          </style-rule>
          <style-rule element='tooltip'>
            <format attr='font-family' value='Arial' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0v2w9ps1ob43r912r7dwc06p627m].[none:sector:nk]</rows>
        <cols>[federated.0v2w9ps1ob43r912r7dwc06p627m].[pcto:sum:co2:qk]</cols>
      </table>
      <simple-id uuid='{6CF09A72-4C6B-4316-8B39-DEA4AC4EA134}' />
    </worksheet>
    <worksheet name='Food (kg) eaten in Germany (per person)'>
      <table>
        <view>
          <datasources>
            <datasource caption='agri_dbv_consumption2+ (capstone_pool)' name='federated.0m61kwm1ylmubb1d03y4y1hyzvtb' />
          </datasources>
          <datasource-dependencies datasource='federated.0m61kwm1ylmubb1d03y4y1hyzvtb'>
            <column-instance column='[kg_per_person]' derivation='Avg' name='[avg:kg_per_person:qk]' pivot='key' type='quantitative' />
            <column caption='Food Product' datatype='string' name='[food_product]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Eggs (items)&quot;' value='Eggs (# of items)' />
              </aliases>
            </column>
            <column datatype='real' name='[kg_per_person]' role='measure' type='quantitative' />
            <column-instance column='[food_product]' derivation='None' name='[none:food_product:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='Year-Trunc' name='[tyr:year:ok]' pivot='key' type='ordinal' />
            <column caption='Year' datatype='date' datatype-customized='true' name='[year]' role='dimension' type='quantitative' />
            <column-instance column='[year]' derivation='Year' name='[yr:year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <manual-sort column='[federated.0m61kwm1ylmubb1d03y4y1hyzvtb].[none:food_product:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Milk, Butter, Cheese&quot;</bucket>
              <bucket>&quot;Potatoes&quot;</bucket>
              <bucket>&quot;Bread&quot;</bucket>
              <bucket>&quot;Eggs (items)&quot;</bucket>
              <bucket>&quot;Vegetables, salad&quot;</bucket>
              <bucket>&quot;Fruits&quot;</bucket>
              <bucket>&quot;Meat&quot;</bucket>
              <bucket>&quot;Fish&quot;</bucket>
              <bucket>&quot;Oils, fats&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0m61kwm1ylmubb1d03y4y1hyzvtb].[yr:year:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:year:ok]' member='1900' />
              <groupfilter function='member' level='[yr:year:ok]' member='2019' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0m61kwm1ylmubb1d03y4y1hyzvtb].[yr:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0m61kwm1ylmubb1d03y4y1hyzvtb].[avg:kg_per_person:qk]' scope='rows' value='' />
            <encoding attr='space' class='0' field='[federated.0m61kwm1ylmubb1d03y4y1hyzvtb].[avg:kg_per_person:qk]' field-type='quantitative' major-origin='0.0' major-show='false' major-spacing='100.0' scope='rows' type='space' />
            <format attr='display' class='0' field='[federated.0m61kwm1ylmubb1d03y4y1hyzvtb].[avg:kg_per_person:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0m61kwm1ylmubb1d03y4y1hyzvtb].[tyr:year:ok]' value='59' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='10' />
            <format attr='height' field='[federated.0m61kwm1ylmubb1d03y4y1hyzvtb].[none:food_product:nk]' value='84' />
            <format attr='text-align' data-class='subtotal' field='[federated.0m61kwm1ylmubb1d03y4y1hyzvtb].[none:food_product:nk]' value='center' />
            <format attr='vertical-align' data-class='subtotal' field='[federated.0m61kwm1ylmubb1d03y4y1hyzvtb].[none:food_product:nk]' value='center' />
            <format attr='font-size' data-class='subtotal' field='[federated.0m61kwm1ylmubb1d03y4y1hyzvtb].[none:food_product:nk]' value='10' />
            <format attr='font-weight' data-class='subtotal' field='[federated.0m61kwm1ylmubb1d03y4y1hyzvtb].[none:food_product:nk]' value='bold' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0m61kwm1ylmubb1d03y4y1hyzvtb].[tyr:year:ok]' value='false' />
            <format attr='font-weight' field='[federated.0m61kwm1ylmubb1d03y4y1hyzvtb].[none:food_product:nk]' value='bold' />
            <format attr='vertical-align' field='[federated.0m61kwm1ylmubb1d03y4y1hyzvtb].[none:food_product:nk]' value='top' />
            <format attr='font-size' scope='cols' value='14' />
            <format attr='font-family' scope='cols' value='Arial' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0m61kwm1ylmubb1d03y4y1hyzvtb].[tyr:year:ok]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0m61kwm1ylmubb1d03y4y1hyzvtb].[avg:kg_per_person:qk]</rows>
        <cols>([federated.0m61kwm1ylmubb1d03y4y1hyzvtb].[none:food_product:nk] / [federated.0m61kwm1ylmubb1d03y4y1hyzvtb].[tyr:year:ok])</cols>
      </table>
      <simple-id uuid='{E4C4ADBB-C750-4D6B-A8EA-C970552AECEB}' />
    </worksheet>
    <worksheet name='Foodprint Germany (per person)'>
      <table>
        <view>
          <datasources>
            <datasource caption='agri_dbv_consumption2+ (capstone_pool)' name='federated.0m61kwm1ylmubb1d03y4y1hyzvtb' />
          </datasources>
          <datasource-dependencies datasource='federated.0m61kwm1ylmubb1d03y4y1hyzvtb'>
            <column caption='CO2 per product' datatype='real' name='[Calculation_415246021050077198]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[co2_footprint] * [kg_per_person]' />
            </column>
            <column-instance column='[Calculation_415246021050077198]' derivation='Avg' name='[avg:Calculation_415246021050077198:qk]' pivot='key' type='quantitative' />
            <column caption='Co2 Footprint' datatype='real' name='[co2_footprint]' role='measure' type='quantitative' />
            <column caption='Food Product' datatype='string' name='[food_product]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Eggs (items)&quot;' value='Eggs (# of items)' />
              </aliases>
            </column>
            <column datatype='real' name='[kg_per_person]' role='measure' type='quantitative' />
            <column-instance column='[food_product]' derivation='None' name='[none:food_product:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='Year-Trunc' name='[tyr:year:ok]' pivot='key' type='ordinal' />
            <column caption='Year' datatype='date' datatype-customized='true' name='[year]' role='dimension' type='quantitative' />
            <column-instance column='[year]' derivation='Year' name='[yr:year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <manual-sort column='[federated.0m61kwm1ylmubb1d03y4y1hyzvtb].[none:food_product:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Milk, Butter, Cheese&quot;</bucket>
              <bucket>&quot;Potatoes&quot;</bucket>
              <bucket>&quot;Bread&quot;</bucket>
              <bucket>&quot;Eggs (items)&quot;</bucket>
              <bucket>&quot;Vegetables, salad&quot;</bucket>
              <bucket>&quot;Fruits&quot;</bucket>
              <bucket>&quot;Meat&quot;</bucket>
              <bucket>&quot;Fish&quot;</bucket>
              <bucket>&quot;Oils, fats&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0m61kwm1ylmubb1d03y4y1hyzvtb].[yr:year:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:year:ok]' member='1900' />
              <groupfilter function='member' level='[yr:year:ok]' member='2019' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0m61kwm1ylmubb1d03y4y1hyzvtb].[yr:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0m61kwm1ylmubb1d03y4y1hyzvtb].[avg:Calculation_415246021050077198:qk]' scope='rows' value='KG CO2 / year' />
            <format attr='width' field='[federated.0m61kwm1ylmubb1d03y4y1hyzvtb].[avg:Calculation_415246021050077198:qk]' value='66' />
            <encoding attr='space' class='0' field='[federated.0m61kwm1ylmubb1d03y4y1hyzvtb].[avg:Calculation_415246021050077198:qk]' field-type='quantitative' major-origin='0.0' major-show='false' major-spacing='1000.0' scope='rows' type='space' />
            <format attr='display' class='0' field='[federated.0m61kwm1ylmubb1d03y4y1hyzvtb].[avg:Calculation_415246021050077198:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0m61kwm1ylmubb1d03y4y1hyzvtb].[tyr:year:ok]' value='59' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='10' />
            <format attr='height' field='[federated.0m61kwm1ylmubb1d03y4y1hyzvtb].[none:food_product:nk]' value='84' />
            <format attr='text-align' data-class='subtotal' field='[federated.0m61kwm1ylmubb1d03y4y1hyzvtb].[none:food_product:nk]' value='center' />
            <format attr='vertical-align' data-class='subtotal' field='[federated.0m61kwm1ylmubb1d03y4y1hyzvtb].[none:food_product:nk]' value='center' />
            <format attr='font-size' data-class='subtotal' field='[federated.0m61kwm1ylmubb1d03y4y1hyzvtb].[none:food_product:nk]' value='10' />
            <format attr='font-weight' data-class='subtotal' field='[federated.0m61kwm1ylmubb1d03y4y1hyzvtb].[none:food_product:nk]' value='bold' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0m61kwm1ylmubb1d03y4y1hyzvtb].[tyr:year:ok]' value='false' />
            <format attr='font-weight' field='[federated.0m61kwm1ylmubb1d03y4y1hyzvtb].[none:food_product:nk]' value='bold' />
            <format attr='vertical-align' field='[federated.0m61kwm1ylmubb1d03y4y1hyzvtb].[none:food_product:nk]' value='top' />
            <format attr='font-size' scope='cols' value='14' />
            <format attr='font-family' scope='cols' value='Arial' />
            <format attr='font-weight' scope='cols' value='normal' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0m61kwm1ylmubb1d03y4y1hyzvtb].[tyr:year:ok]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0m61kwm1ylmubb1d03y4y1hyzvtb].[avg:Calculation_415246021050077198:qk]</rows>
        <cols>([federated.0m61kwm1ylmubb1d03y4y1hyzvtb].[none:food_product:nk] / [federated.0m61kwm1ylmubb1d03y4y1hyzvtb].[tyr:year:ok])</cols>
      </table>
      <simple-id uuid='{111323E2-FDE5-4B46-830B-AD1E3E115F6D}' />
    </worksheet>
    <worksheet name='Kg and CO2 per person per year'>
      <table>
        <view>
          <datasources>
            <datasource caption='agri_dbv_consumption2+ (capstone_pool)' name='federated.0m61kwm1ylmubb1d03y4y1hyzvtb' />
          </datasources>
          <datasource-dependencies datasource='federated.0m61kwm1ylmubb1d03y4y1hyzvtb'>
            <column caption='CO2 per product' datatype='real' name='[Calculation_415246021050077198]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[co2_footprint] * [kg_per_person]' />
            </column>
            <column-instance column='[Calculation_415246021050077198]' derivation='Avg' name='[avg:Calculation_415246021050077198:qk]' pivot='key' type='quantitative' />
            <column-instance column='[kg_per_person]' derivation='Avg' name='[avg:kg_per_person:qk]' pivot='key' type='quantitative' />
            <column caption='Co2 Footprint' datatype='real' name='[co2_footprint]' role='measure' type='quantitative' />
            <column caption='Food Product' datatype='string' name='[food_product]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Eggs (items)&quot;' value='Eggs (# of items)' />
              </aliases>
            </column>
            <column datatype='real' name='[kg_per_person]' role='measure' type='quantitative' />
            <column-instance column='[food_product]' derivation='None' name='[none:food_product:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='Year-Trunc' name='[tyr:year:ok]' pivot='key' type='ordinal' />
            <column caption='Year' datatype='date' datatype-customized='true' name='[year]' role='dimension' type='quantitative' />
            <column-instance column='[year]' derivation='Year' name='[yr:year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <manual-sort column='[federated.0m61kwm1ylmubb1d03y4y1hyzvtb].[none:food_product:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Milk, Butter, Cheese&quot;</bucket>
              <bucket>&quot;Potatoes&quot;</bucket>
              <bucket>&quot;Bread&quot;</bucket>
              <bucket>&quot;Eggs (items)&quot;</bucket>
              <bucket>&quot;Vegetables, salad&quot;</bucket>
              <bucket>&quot;Fruits&quot;</bucket>
              <bucket>&quot;Meat&quot;</bucket>
              <bucket>&quot;Fish&quot;</bucket>
              <bucket>&quot;Oils, fats&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0m61kwm1ylmubb1d03y4y1hyzvtb].[yr:year:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:year:ok]' member='1900' />
              <groupfilter function='member' level='[yr:year:ok]' member='2019' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0m61kwm1ylmubb1d03y4y1hyzvtb].[tyr:year:ok]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0m61kwm1ylmubb1d03y4y1hyzvtb].[avg:Calculation_415246021050077198:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0m61kwm1ylmubb1d03y4y1hyzvtb].[yr:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0m61kwm1ylmubb1d03y4y1hyzvtb].[tyr:year:ok]' value='38' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0m61kwm1ylmubb1d03y4y1hyzvtb].[none:food_product:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0m61kwm1ylmubb1d03y4y1hyzvtb].[avg:kg_per_person:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0m61kwm1ylmubb1d03y4y1hyzvtb].[none:food_product:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0m61kwm1ylmubb1d03y4y1hyzvtb].[avg:Calculation_415246021050077198:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0m61kwm1ylmubb1d03y4y1hyzvtb].[none:food_product:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0m61kwm1ylmubb1d03y4y1hyzvtb].[avg:kg_per_person:qk] + [federated.0m61kwm1ylmubb1d03y4y1hyzvtb].[avg:Calculation_415246021050077198:qk])</rows>
        <cols>([federated.0m61kwm1ylmubb1d03y4y1hyzvtb].[none:food_product:nk] / [federated.0m61kwm1ylmubb1d03y4y1hyzvtb].[tyr:year:ok])</cols>
      </table>
      <simple-id uuid='{289B9079-F121-45F7-81B6-4E3DD8B14DF7}' />
    </worksheet>
    <worksheet name='kg per person per food group'>
      <table>
        <view>
          <datasources>
            <datasource caption='agri_dbv_consumption2+ (capstone_pool)' name='federated.0m61kwm1ylmubb1d03y4y1hyzvtb' />
          </datasources>
          <datasource-dependencies datasource='federated.0m61kwm1ylmubb1d03y4y1hyzvtb'>
            <column-instance column='[kg_per_person]' derivation='Avg' name='[avg:kg_per_person:qk]' pivot='key' type='quantitative' />
            <column caption='Food Product' datatype='string' name='[food_product]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Eggs (items)&quot;' value='Eggs (# of items)' />
              </aliases>
            </column>
            <column datatype='real' name='[kg_per_person]' role='measure' type='quantitative' />
            <column-instance column='[food_product]' derivation='None' name='[none:food_product:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='Year-Trunc' name='[tyr:year:ok]' pivot='key' type='ordinal' />
            <column caption='Year' datatype='date' datatype-customized='true' name='[year]' role='dimension' type='quantitative' />
            <column-instance column='[year]' derivation='Year' name='[yr:year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <manual-sort column='[federated.0m61kwm1ylmubb1d03y4y1hyzvtb].[none:food_product:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Milk, Butter, Cheese&quot;</bucket>
              <bucket>&quot;Potatoes&quot;</bucket>
              <bucket>&quot;Bread&quot;</bucket>
              <bucket>&quot;Eggs (items)&quot;</bucket>
              <bucket>&quot;Vegetables, salad&quot;</bucket>
              <bucket>&quot;Fruits&quot;</bucket>
              <bucket>&quot;Meat&quot;</bucket>
              <bucket>&quot;Fish&quot;</bucket>
              <bucket>&quot;Oils, fats&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0m61kwm1ylmubb1d03y4y1hyzvtb].[yr:year:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:year:ok]' member='1900' />
              <groupfilter function='member' level='[yr:year:ok]' member='2019' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0m61kwm1ylmubb1d03y4y1hyzvtb].[yr:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0m61kwm1ylmubb1d03y4y1hyzvtb].[tyr:year:ok]' value='38' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0m61kwm1ylmubb1d03y4y1hyzvtb].[none:food_product:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0m61kwm1ylmubb1d03y4y1hyzvtb].[avg:kg_per_person:qk]</rows>
        <cols>([federated.0m61kwm1ylmubb1d03y4y1hyzvtb].[none:food_product:nk] / [federated.0m61kwm1ylmubb1d03y4y1hyzvtb].[tyr:year:ok])</cols>
      </table>
      <simple-id uuid='{76D17A66-A4D4-43E7-A945-A82820CEB55A}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='13' param='horz' w='98400' x='800' y='1000'>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='7' param='horz' w='82400' x='800' y='1000'>
              <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='98000' id='5' w='82400' x='800' y='1000'>
                <zone h='98000' id='3' name='CO2 Emissions 1900' w='41200' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='98000' id='9' name='CO2 Emissions 2019' w='41200' x='42000' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' fixed-size='160' h='98000' id='12' is-fixed='true' param='horz' w='16000' x='83200' y='1000'>
              <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' fixed-size='744' h='98000' id='14' is-fixed='true' name='CO2 Emissions 2019' pane-specification-id='2' param='[federated.1tl4urc06zspc813t0gno1co3qr6].[none:food_product:nk]' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='42' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='84000' id='41' param='vert' w='84000' x='8000' y='8000'>
                <zone fixed-size='280' h='98000' id='3' is-fixed='true' name='CO2 Emissions 1900' w='41200' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='98000' id='9' is-fixed='true' name='CO2 Emissions 2019' w='41200' x='42000' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' fixed-size='744' h='98000' id='14' name='CO2 Emissions 2019' pane-specification-id='2' param='[federated.1tl4urc06zspc813t0gno1co3qr6].[none:food_product:nk]' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{3DF7D979-0FD6-464F-9943-C5B574C14B34}' />
    </dashboard>
  </dashboards>
  <windows source-height='135'>
    <window class='worksheet' name='CO2 Emissions 1900'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='6' param='[federated.1tl4urc06zspc813t0gno1co3qr6].[none:food_product:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{E105374C-1BE5-49C0-A776-726F88D6A2DB}' />
    </window>
    <window class='worksheet' name='CO2 Emissions 2019'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{F6679DED-5362-4009-A68A-88F01DBA1A86}' />
    </window>
    <window class='worksheet' name='CO2 Emissions 1900 (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='5' param='[federated.1tl4urc06zspc813t0gno1co3qr6].[none:food_product:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{30C79D65-E032-4A16-A78C-1BEEFE3A8FBA}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='CO2 Emissions 1900'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='CO2 Emissions 2019'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{D4CA30A1-0B25-4E14-87DC-78E6DEBFF608}' />
    </window>
    <window class='worksheet' name='kg per person per food group'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0m61kwm1ylmubb1d03y4y1hyzvtb].[none:food_product:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{B18F9B45-DD96-4D1A-9EBE-1EF145DE00FF}' />
    </window>
    <window class='worksheet' name='Food (kg) eaten in Germany (per person)'>
      <cards>
        <edge name='left'>
          <strip size='219'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='100'>
            <card pane-specification-id='2' param='[federated.0m61kwm1ylmubb1d03y4y1hyzvtb].[tyr:year:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{A7760812-CE15-4C41-9A53-64A4A2E307CA}' />
    </window>
    <window class='worksheet' name='Foodprint Germany (per person)'>
      <cards>
        <edge name='left'>
          <strip size='219'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='116'>
            <card pane-specification-id='4' param='[federated.0m61kwm1ylmubb1d03y4y1hyzvtb].[tyr:year:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{D8BE8F53-EDAD-4C9D-8642-AE0B94C407C4}' />
    </window>
    <window class='worksheet' name='Kg and CO2 per person per year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0m61kwm1ylmubb1d03y4y1hyzvtb].[none:food_product:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{5FA7A428-4BF5-4553-A345-A6D6F44446EC}' />
    </window>
    <window class='worksheet' name='CO2 per sector in Germany 2020'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{CFBE4B99-0BC5-4112-9F2E-EFA7E41262A3}' />
    </window>
    <window class='worksheet' name='CO2 per sector in Germany 2020 (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0v2w9ps1ob43r912r7dwc06p627m].[none:sector:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{DB3EEE58-262F-4C40-9D98-A353C64F0E14}' />
    </window>
    <window class='worksheet' maximized='true' name='Beef vs. chicken'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='279'>
            <card pane-specification-id='1' param='[federated.0ws19ki0b4q9850zrwrxa0bbrmgy].[none:co2_emissions:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{E752189D-8E51-4001-9575-71D0747E3102}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Beef vs. chicken' width='240'>
      iVBORw0KGgoAAAANSUhEUgAAAPAAAAGACAYAAACTAO/nAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO3deVhU9eLH8c8M+z4iyiaK0IKJqUCgIl7DJbwGmaa/NCHXfmplXrv3ttiT
      Xr3XlutT6pNdLZdS0Uz9aVcJVK4YXHMBF0BFRcAVERAQWUeY+f1BcwJBBWVmznf8vJ6npxnO
      OfClfHuWOYtCq9VqQURCUhp7AET08BgwkcAYMJHAGDCRwBgwkcAYMJHAGDCRwBgwkcAYMJHA
      GDCRwBgwkcAYMJHAGDCRwBgwkcAYMJHAzB/1G6SlpbXHOIjoITxywCS+oKAgYw+BHtIjB8z/
      +WLjFpTYuA9MJDBuQutRZWUlMjIyoFAoEBQUBHNz/uem9sU/UXq0efNmpKamAgD8/PygUqnu
      O39ubi6++OKLVn//0NBQjB8//pHGSGJjwHqSlJQkxdtaly9fxp07d1o9v1qtbuuwyMRwH1gP
      Dhw4gC1btrR5uatXr+phNGTKuAZuR6WlpYiNjUVmZuZDLX/lyhXp9dixYxEcHHzf+a2srB7q
      55DpYMDtQKvVIiUlBdu3b0dNTc1DfQ+NRoNr165J75988kk4Ojq21xDJRHETuh1s2rQJsbGx
      TeLt0aNHm75HQUGBtP9rbm4OT0/Pdh0jmSYG3A7Kysqk11ZWVoiJicH06dPb9D0abz57enry
      IydqFf4paScWFhYYOHAgIiIioFKpUFlZ2ablGx/A6tq1K9RqNbKzs3H9+nWUl5fD1dUVXl5e
      8PDwYNwk4Z+EdhAeHo7o6OhH2me9fPmy9PrChQuYN28eysvLm83XsWNHxMTEwM/P76F/FpkO
      bkK3gx49ejzyAafGm9C6tW5Lbt68iaVLl2Lnzp2P9PPINHANLAOlpaXNNrlVKhX8/Pzg6+uL
      iooKnDt3DmfPngXQcNQ7Pj4eTz75JHr27GmMIZNMMGAZuPsEDn9/f8yYMQMWFhbS1/74xz/i
      yJEjWL9+Perq6gAAGzduxIIFC/h58GOMAcuAr68vZs+ejeLiYtTW1mLIkCEwMzNrNl9ISAgK
      Cwuxe/duAEBJSQmys7Ph7+9v6CGTTDBgGbC1tW31pnBERAT27t0rnQd97do1BvwY40EswVhY
      WMDV1VV6n5+fb8TRkLExYAHZ29tLr+vr6404EjI2bkLLwMmTJ5Gfn4/y8nL4+vriueeeu+/8
      RUVF0uvGa2N6/DBgGUhOTsbp06cBAHl5efcNuLS0FDdv3pTeu7m56X18JF/chJaBxhc+XLp0
      CZcuXbrnvNu2bYNWqwXQcN71008/rffxkXwxYBno1asXlMqG/xVarRarV69GaWlpk3k0Gg12
      7drV5C6Sw4cP5yWHjzluQsuAm5sbXnrpJezYsQMAUFhYiPnz5yMsLAweHh4oLS1FZmYmLl68
      KC3j6uqKYcOGGWnEJBcMWCZeeOEF5Ofn48iRIwCA2tpaJCYmtjivv78/pk6dyjOwiAHri0Kh
      gEKhkPZXdZvI95t/ypQpCAkJwdatW3H9+vVm0zt16oSQkBCMHDkSCoVCb2MncSi0uj9hJCu3
      b9/GjRs3UFxcDJVKha5du8LW1rbdf05aWhqfriEwroFlysHBAQ4ODnjiiSeMPRSSMR6FJhIY
      AyYSGAMmEhgDJhIYAyYSGAMmEhgDJhIYAyYSGAMmEhgDJhIYAyYSGAMmEhgDJhIYAyYSGAMm
      EhgDJhIYAyYSGAMmEhgDJhIYAyYSGAMmEhgDJhIYAyYSGAMmEhhv7E6PZML6UcYegknbFLPz
      vtO5BiYSGAMmEhgDJhIYAyYSGAMmEhgDJhIYAyYSGAMmEhgDJhIYAyYSGAMmEhgDJhIYAyYS
      GAMmEhgDJhIYAyYSGAMmEhgDJhIYAyYSGAMmEhgDJhIYAyYSGAMmEhgDJhIYAyYSGAMmEhgD
      JhIYAyYSGAMmEhgDJhIYAyYSGAMmEhgDJhIYAyYSGAMmEhgDJhIYAyYSGAMmEhgDJhIYAyYS
      GAMmEhgDJhIYAyYSGAMmEhgDJhIYAyYSGAMmEhgDJhIYAyYSGAMmEhgDJhIYAyYSGAMmEhgD
      JhIYAyYSGAMmEhgDJhIYAyYSGAMmEhgDJhIYAyYSGAMmEhgDJhIYAyYSGAMmEhgDJhIYAyYS
      GAMmEhgDJhIYAyYSGAMmEhgDJhIYAyYSGAMmEhgDJhIYAyYSGAMmEhgDJhIYAyYSGAMmEhgD
      JhIYAyYSGAMmEhgDJhIYAyYSGAMmEhgDJhIYAyYSGAMmEhgDJhIYAyYSGAMmEhgDJhIYAyYS
      GAMmEhgDJhIYAyYSGAMmEhgDJhIYAyYSGAMmEhgDJhIYAyYSGAMmEhgDJhIYAyYSGAMmEhgD
      JhIYAyYSGAMmEhgDJhIYAyYSGAMmEhgDJhIYAyYSGAMmEhgDJhIYAyYSGAMmEhgDJhIYAyYS
      GAMmEpjQAWu1gEajNfYwiIzG3NgDeBSpJzJx5nwOYsa9BKVSYezhNFNZWYmMjAwoFAoEBQXB
      3Lz1/7mrq6tx48YNFBcXw9HREd7e3rC0tNTjaElEQgf8y6FjuJpfAK0WeP1/5Bfx5s2bkZqa
      CgDw8/ODSqV64DLl5eXYvXs3UlJSoNFopK8rlUp4eXlh6NChCA4O1tuYSSxCB3zt+g1otcCJ
      zCwA8oo4KSlJire1SktL8emnn6KsrKzZNI1Gg0uXLmHt2rWoqKhAeHh4ew2VBCZ0wA37v1po
      tcDxjDPQarWY9Oooo0d84MABbNmypU3L3LlzB8uXL28Sb58+feDr64uysjKcPHkSN2/ehFar
      xZYtW6BQKPD888+399BJMEIH7ORoh7JbFbg74snjXzZKxKWlpYiNjUVmZmablz106BDy8/MB
      NGwuT5w4EaGhodL0kSNHYvny5bh48SIA4Oeff8agQYNgZmbWLmMnMQl9FNrOxha6eBtHvG7z
      DoMendZqtUhOTsaCBQseKl6tVos9e/ZI7wcOHNgkXgCws7PDnDlzYGdnB6BhX/nEiROPNnAS
      npAB19fXY+V3P+JawY0m8er+fSz9DNZt/j+DRbxp0ybExsaipqZG+lqPHj1avXx+fj6Ki4ul
      90OGDGlxPhsbGwwcOFB6f+DAgbYPlkyKcAHX19fj2w3bcfrchRbjbaBF2skzWLtpu0Eibrzf
      amVlhZiYGEyfPr3Vy+fl5UmvO3ToADc3t3vO2/gvhgsXLuDOnTttHC2ZEqH2gVsbr+5raSfP
      QKsFpr42Ru/7xBYWFhg4cCAiIiKgUqlQWVnZ6mV1+7UA4OXldd95G0/XarUoKCh44DJkuoQJ
      uK3x/h7xaQDa3yLWzwZHeHg4oqOj4ejo+FDL37p1S3rdsWPH+85rb28PCwsLac1bVFTEgB9j
      sgu4rq4eh49l4Fj6aVy9fgNq9R042NvCwsISxTdL2hSv7t+pJ05DqwWmTdRPxG3Z321J433n
      1vwl4ODggJKSEgBAbW3tI/1sEpvsAt6+ex9+TT0JAFKAt8orAVQ8VLy/R3wKWq0W06Nf0dua
      +GFVV1dLr1tzuqSFhYX0mgE/3uT1JxlAVMTz6Obl8cAgHxRvZ5cOcHF2hpmZEkqlGXy9vdC3
      Vw/ZxQs07MvqND598l4af/ZbV1enlzGRGGS3BraxtsLMSf+Dr9f9gIuX8/Ew8Xp5umLO/8bA
      3s7WCL/Bo2nNXzD19fXSa17g8HiT3+oIDRHPmvwqvL3cH4t4rayspNet+Vio8Tw2NjZ6GROJ
      QZYBA79FPGU8vJttTjd+LX68AGBtbS29rqioeOD8jedhwI832QYMNET85tTxcHSwM9l4AaBT
      p07Sa93R5XupqKiAWq2W3js4OOhtXCR/sg4YAI4cy8Ctct0ap+V4Ozg5CBsvALi7u0uvr169
      et95G083NzeHp6en3sZF8ifrgM+cy8G2XXt/e6eFo4MDWopYo4Ww8QJA9+7dpdeFhYX3XQuf
      PXtWet21a9c23eWDTI9sA84vKMKa2IYLEpRKBV59+Y+Y/5eZ8O7aBXdHXH77tpFH+2i6desG
      FxcX6X1iYmKL89XU1CAlJUV636tXL72PjeRNlgFXVFZh1fdbUV1TC1sbK7w5ZTwG9Q+EjbUV
      Zk9/Dd3vitiy0YkNomp8+eD+/fuRlJTUZHp1dTWWL18uHcCytrbG4MGDDTlEkiHZbX/V1dfj
      mw3bUHSzBJ06qjBz8qtw6/z72snG2gqz33gNy1ZtRO6lK9BqAU93VyOOuH0MGzYMBw8eRHFx
      MbRaLX744QdkZWXh6aefxu3bt3Hs2DEUFhZK80dERMDWVtzdBmofslsDb9r+My7kXoavdxf8
      5a0pTeLVsbG2xjv/O/G3NTEQ1KenoYfZ7iwsLDB79uwmB7TS09Px448/Ij4+vkm8AwYMwIgR
      I4wxTJIZWQV8OC0dh9PS0S/wWbzzRvR9D0zZWFtjzoxohPULwKD+QQYcZesoFAooFL9fwtia
      M6xcXV3xwQcfICQkpMnJHToqlQrR0dGIjo5u17GSuBTaxifiGllNTS2OZ2ZhwHN9jD0Uo9Nd
      63vlyhVYWlrC1dUVnTt3bvd7YKWlpSEo6OH/ApywflQ7jobutilm532ny2of2NraivH+RqFQ
      wN3dvckmNdHdZLUJTURtw4CJBMaAiQTGgIkExoCJBMaAiQTGgIkExoCJBMaAiQQmqzOxWkuj
      0SA3NxfZ2dkoLS1FWVkZysvLYWdnBxcXF7i4uKBTp07w8/Nrcr8pIlMjTMBqtRr79u3DwYMH
      kZqaitLS0gcuY2lpiX79+mHQoEEICwt74GNLiEQj+4DLy8uxbds2/PDDDw+84dvd1Go1kpOT
      kZycDIVCgaFDh2Ly5Ml46qmn9DRaIsOSbcA1NTVYvXo1tmzZ0uTRI0qlEl27doWvry98fHzQ
      sWNH2Nvbw9bWFjU1NSgrK0NpaSkKCwtx6tQp5OTkAGi4umffvn3Yt28fBg0ahGnTpuGZZ54x
      1q9H1C5kGXBaWhr+/ve/S3dgVCqVCAoKwtChQzF48GA4Ozu3+nuVl5cjMzMTBw8eREJCAsrL
      y5GcnIyUlBRMnDgRM2bMaPHaWyIRyOp64IqKCixbtgw7duwA0HC71UmTJmHIkCFQqVSP/P3V
      ajUOHDiAnTt34ujRowAAb29v/O1vf0PPnuLf1eNh8HpgeRPqeuAjR45gx44dUKlUmDp1KsaM
      GdOuz/6xtLTE8OHDMXz4cJw+fRrLli3D8ePH8e2332Lp0qXt9nOIDEVWAdvY2GDatGmIjo6G
      nZ2dXn9Wz549sWrVKvz3v//FiRMn9PqziPRFVgEPGDAAAwYMMNjPUygUCAsLQ1hYmMF+JlF7
      4plYRAJjwEQCY8BEApPVPvD9LFy4ELt3736oZW1tbWFvbw8HBwd0794dISEhGDx4MJycnNp5
      lESGJcwaWKPRPPQ/FRUVKCgoQHZ2Nvbu3YtFixZh7NixOHTokLF/LaJHIkzAAQEBiIqKavZA
      606dOqF3794IDw9Hnz594Obm1uQpCEqlEh06dGj2eXJJSQneffddnDt3ziDjJ9IHYTaho6Ki
      cPXqVdz+7VGiQ4YMwcyZM+Ht7d1s3vz8fKxevRq7d++GRqPB5MmTMWHCBKjVahQVFWHr1q2I
      jY2FWq3GggULsGnTpiaPQSEShTBr4LS0NKxduxYAMHPmTHz22WctxgsAHh4e+Pjjj/GnP/0J
      ALB06VKcPXsWlpaW8PT0xJw5czBnzhwAQHZ2NrKysgzyOxC1N2EC3rRpE4CGh1pPnjy5Vcu8
      +uqr6N27NzQaDWJjY5tN010UcfDgwfYdLJGBCBPwyZMnATScrdWaJ/0BDWdaPffccwCAY8eO
      NZlmZmYmXcBQVFTUjiMlMhxhAq6srASANt9VQ/dRUVlZWbNpugNiLU0jEoEwAeue0nf27Nk2
      Lafbv7376DUA6YAYb7VDohImYF9fXwBAQkICcnNzW7VMTk4O9u/fDwB4+umnm0xTq9XIyMgA
      AD7Ck4QlTMBjx44FAFRVVWHu3LnSPvG9pKen489//jNqamoAACNHjpSmaTQarFy5Erdu3QIA
      9OnDZxKTmIT5HDgkJARhYWFISUnB1atXMW3aNPTr1w99+/aFu7s7VCoViouLUVBQgBMnTiA1
      NVVaNjg4GMOGDQMAnDlzBh999BEuX74MAOjbty+effZZo/xORI9KmIAVCgU++eQTzJ07V7od
      zuHDh3H48OH7LtevXz/885//lI5cnzp1SorXwsICb7/9tn4HTqRHwgQMANbW1vjqq68QHx+P
      VatWIT8//57zenh4YNKkSRg1alSTj50uXrwo3STvrbfe4p0pSWiyuqldW2i1WuTk5CA1NRVF
      RUUoKSmBubk5PDw80Lt3b/Tt27fFz4urqqpgaWkJc3Oh/u7SG97UTt6EuqldWygUCjzxxBN4
      4okn2rScra2tnkZEZHjCBLxixQpoNBpERUWhW7duxh4OkSwI8zFSUVERvv/+e4wZMwZTpkzB
      jh07pLOziB5XwqyBG1/ul5GRgYyMDCxZsgRDhgxBZGQkAgMDW32ONJGpECbg9957D/369UNc
      XBwOHz4MjUaD2tpa/Pzzz/j555/h7u6OF198EZGRkfDw8DD2cIkMQsij0Ddv3sSePXsQFxfX
      4h01AgMDERUVhfDwcNjY2BhhhOLgUWh5e9BRaCEDbiw3NxdxcXGIj49HYWFhk2m2trYYNmwY
      oqKi8Oyzz/KuGy1gwPJm8gHraDQapKWlIT4+HklJSaioqGgy3cfHBz/++KORRidfDFjeHhSw
      yRz1USqVCA4Oxvz587Fv3z4sWbIEnp6e0nTdo0qJTIkwB7Fao7a2FgcPHsT+/fuRkpLCj5nI
      5AkfsG7TOSEhAYmJiaiqqmoy3dXVVTo6TWRqhAxYq9UiOzsb8fHxSEhIaHZPK0tLSwwePBgv
      vfQSnnvuOX4+TCZLqIALCgqQkJCA+Ph45OTkNJv+zDPPIDIyEi+88AIcHR2NMEIiwxIm4H/9
      619Ys2ZNs6936NABI0aMQFRUVJsvbCASnTAB37hxQ3qtVCoxcOBAREVFITQ0FBYWFkYcGZHx
      CBMwAHTv3h2RkZEYOXIk7yRJBIECfvvtt+Hs7MyzqYgaESZgrnGJmhMm4LtpNBpUV1dLt43V
      qaurQ21tLWpqalBbW4va2lqcOXMGiYmJWL9+vZFGS6QfQgVcVVWFb7/9FvHx8SguLm7Tsnc/
      H5jIFAgTsEajwZw5c3D8+HFjD4VINoQJODExsUm87u7u8PDwwNWrV3Hjxg04OTnB19cXarUa
      +fn5KCkpkeZ9//33ER4eboxhE+mVMAEnJCRIr+fNm4dRo0ZBoVBg9+7dWLBgAezs7LBq1Soo
      FApotVpkZmZi0aJFyMvLw/HjxzFmzBgjjp5IP4Q5STg7OxsA0Lt3byleANK1rPn5+bh48SKA
      hvtnPfvss1i9ejXc3Nywd+9eHDp0yCjjJtInYQLWPYgsNDS0yWfBrq6u0nnPZ86cabKMk5MT
      Zs6cCQAtnoZJJDphAtZ9XOTm5tbk6wqFAl5eXgCA8+fPN1suPDwcSqUS6enpuHnzpv4HSmRA
      wgSse0B3S3cA0t3ovaUb3NnY2KBTp04Aft8MJzIVwgTs6uoKANJ+bmPdu3cHAJw+fRr19fXN
      pms0GgBodp8sItEJE3BgYCAAIC4urlmIvr6+AIDq6mqcPXu2ybSioiLpgv/OnTsbYKREhiNM
      wBEREQCAwsJCTJ06Ffv378edO3cAAP7+/tIlhf/4xz+k2+qo1Wp8/vnn0vfo0qWLgUdNpF/C
      BNyzZ0/pZIycnBz89a9/xY4dOwAAzs7OGDFiBICGA1mjRo3CW2+9hZdeeglJSUkAgD59+qBD
      hw7GGTyRnggTMAAsXLgQwcHB0vvGt42dNm0a3N3dAQAlJSU4fPiwtOmsVCoxd+5cXopIJkeo
      gK2trbFixQosW7YMkZGR8Pb2lqZ5eHhg3bp18Pf3b7KMp6cn1qxZg2eeecbAoyXSP2FOpdRR
      KBQIDQ1FaGhos2kuLi5Yt24d8vLycOPGDXTr1g3u7u5c85LJEi7gB1EoFPDx8YGPj4+xh0Kk
      d7LahC4qKkJ1dbVBf6ZWq8Xly5cN+jOJ2ousAs7IyMCoUaOwfft21NXV6f3nZWVlYdasWfji
      iy/0/rOI9EFWAXfo0AFlZWX45JNPMG7cOCQmJrZ46uSjysnJwUcffYTo6GikpqZKp1oSiUZW
      +8ABAQHYsGEDFi5ciLNnz+L9999H9+7dMWzYMAwdOvSR9msrKyuxZ88e/PTTTzh9+jSAhtvs
      vPXWW3j11Vfb61cgMihZPh+4vr4eGzduxKpVq6BWq6Wv+/j4YOjQoejVqxd8fX3RqVOnex5h
      rqqqwqlTp3Dy5EmcPHkS6enpqK2tlab37t0bH3/8sXQhxOOKzweWtwc9H1hWa2AdMzMzvP76
      6xgyZAg2bNiAXbt2Qa1WIzc3F9988400n729PZydnWFvbw87OztUVVWhrKwMpaWlzZ5SqBMQ
      EICpU6ciODiYHy+R8GQZsE6XLl3wwQcfYMaMGdi6dSu2bt2K0tJSaXpFRUWrrjCys7PDgAED
      MG7cOPTt21efQyYyKFkHrNOhQwe88cYbmDp1KrKysnD06FGkpaUhOzsbt27dki4XBBpOm+zY
      sSNcXFzQp08fhIWFoW/fvnx+EpkkIQLWMTMzg7+/P/z9/TFlyhQADdf63r59G7du3YK9vT1U
      KhWfB0yPDaECbolSqYSTkxOcnJyMPRQig+OqikhgDJhIYAyYSGAMmEhgDJhIYAyYSGCyClij
      0aCystLYwyAShqwCLiwsxB/+8AdERkbiyJEjxh4OkezJLmAAuH79erNpixcvRlhYGJYvX27o
      YRHJlqwCbvzwMd1N23XUajWqq6ubfZ3ocSargO3s7KTXCQkJTS5SIKLmZHUutJ+fH8zNzVFX
      V4eEhAQcP34c3t7eMDMzw4ULFwAASUlJLT7g7EHMzc3x5ZdftvOIiYxLVgE7Ojpi4sSJ+O67
      7wA07BPr9ot1CgoKUFBQ0ObvbWlp2R5DJJIVWQUMALNmzYKjoyPi4uJw/fr1e95Zg4hkGLBS
      qURMTAxiYmKg1WpRWVmJuro6fP7559i7dy9Gjx6NWbNmGXuYRLIgu4AbUygUsLe3B/D7JrCV
      lRVUKpUxh0UkG7IOuLF+/frBwcEBAQEBxh4KkWwIE3BERIT0kG8iaiBMwHcrKipCUlIS0tPT
      UVhYiIqKCkyfPh3h4eGoqqrC999/j1deeYVPXSCTJlzAVVVVWLp0Kf797383e35SeXk5gIZT
      MdesWYPvvvsOU6ZMwRtvvMF7QJNJEirgsrIyTJ8+HXl5efedT3cudX19Pb799luUlJTg/fff
      Z8RkcmR1KuX9aDQa/OUvf5HidXd3x+zZs7Fy5Uo4ODg0mdfPzw+jR4+GuXnD30/bt2/HoUOH
      DD5mIn0TJuDExEScOHECABAWFobt27cjJiYGQUFBze4D7eLigg8//BDLly+HtbU1AOCbb77R
      y5MOiYxJmIB3794NoGHNu3DhwladGhkcHIw333wTAHDq1ClpH5nIVAgTcFZWFgDg+eefb7bJ
      fD+NP3q6du1au4+LyJiECVj3ULOnnnqqTcs5OTlJm9gPcxEEkZwJE7Buk7mkpKRNy125ckW6
      rlh3UIvIVAgTcJcuXQA0PJC6LRrfW8vLy6tdx0RkbMIEPGDAAADAr7/+iqSkpFYtk5+fjxUr
      VgAAOnfujG7duultfETGIEzAEyZMgJWVFQBg3rx52LBhwz1vuaPVavGf//wH06ZNk25TGxMT
      w8eOkskRZqewc+fOePfdd7F48WKo1WosW7YMq1evhr+/v3TRf3JyMo4ePYqsrCxcuXJFWrZX
      r14YPXq0sYZOpDfCBAwAo0ePRm1tLZYuXYr6+npUVlY22cdNTk5utoy/vz+WLFnCW+qQSRIq
      YAAYP348AgMDsXbtWuzfv/+em9Hu7u4YP348xo4dCwsLCwOPksgwhAsYaPgs+NNPP0VVVRWy
      srKQn5+P8vJyWFhYQKVSwc/PD15eXrx4gUyekAHr2NraIjAwEIGBgcYeCpFRmMRhWa1Wi9ra
      WtTX1xt7KEQGJWTAGo0GKSkp+PjjjxEVFYX+/fsjNDQUu3btAgDcunULs2bNQkpKCp/uQCZN
      uE3ovLw8zJs3D+fPn7/nPPn5+Th69CiOHj2KAQMG4LPPPoONjY0BR0lkGEKtgbOzszFp0qQm
      8bZ0oKrx0w1//fVXvPnmm3woGpkkYQKurq7G3LlzpTOrBg8ejG+++Qa//PILnJycmsw7aNAg
      zJ8/Hy4uLgCAjIwMxMXFGXzMRPomTMA7d+6U1qyvv/46lixZgoCAANja2jab19zcHJGRkVi7
      di3c3NwAAGvXruX+MJkcYQLet28fAKBHjx6tfrSKh4cH5syZA6Bhv7jx84eJTIEwAefk5AAA
      +vfvDzMzs1Yvp7uKCWiImMiUCBOwbt/X29u7TcuZm5tLVyEVFRW197CIjEqYgHX7uo2vMmqN
      vLw8ad+3pf1lIpEJE7Cvry8A4JdffmnTGVd79+6VXvv4+LT7uIiMSZiAn3/+eQDA+fPnsW7d
      ulbd4/nYsWPYsGEDgIYLIHRHpIlMhTABv/LKK+jYsSMAYOXKlXjvvfeQk5PT4kdDZWVl+PLL
      LzFz5kxp+vTp0w06XiJDUGgFelzB8ePHm51VZW9vj6qqKmg0Gvj4+KC6urrJmVgA8OKLL2L+
      /Pm8vLAFaWlpCAoKeujlJ6wf1Y6jobttitl53+nCrIEBICAgACtWrEDnzp2lr1VUVEhr2dzc
      3Gbxjhs3Dh9++CHjJZMk3MUMAQEB2LZtG3bs2IG4uDhcuHCh2Wa0o6MjQkJCMGHCBPTq1ctI
      IyXSP+ECBho+Dnrttdfw2muvoaqqCoWFhU3uyOHq6so7UNJjQciAG7O1tW3zyR1EpoKrKSKB
      Cb8GBhoeWhYbG4tz586hsLAQzs7OCAwMxMsvvwwPDw9jD49Ib2Qd8KVLl7Bt277rNsUAAAJr
      SURBVDZkZ2fDzMwM/v7+GDNmTJOj0Lt27cLixYubfLR09epVZGRkYOPGjZg5cyaio6N5FJpM
      kiwD1mg0WLlyZbMzro4cOYLNmzfjk08+QWhoKH799VcsWrTontf53rlzB8uXL4dSqcTEiRMN
      NXwig5FlwF999RXWr1/f4rSqqirMnTsXGzZswNdffy3FO3DgQLzwwgtQqVS4dOkSNm3aJF0+
      +PXXX2PEiBHSmVxEpkJ2AV+8eBEbN26U3g8fPhwRERFwdHTE+fPnsXbtWhQXF+Odd96RLg+c
      MWMGpk2bJi3Tv39/DB8+HG+//TbOnTsHtVqNPXv2YMKECQb/fYj0SXZHoRMTE6W16uTJk7F4
      8WIMGjQIffr0wbhx47BmzRpYW1tL8Xp4eGDKlCnNvo+zszPmzp0rvW/rc4WJRCC7gFNTUwE0
      3G0yJiam2XRPT08MHTpUet+vX797nrTRt29fODs7A2hYsxOZGtkFXFxcDKDh4WQODg4tzuPp
      6Sm9vt/HREqlUjpiXVFR0Y6jJJIH2QVcXl4OoOEqo3tpfDDqQXfZ0E3XPUOYyJTILmDd57lW
      Vlb3nEelUkmvH/ToUHPzhuN0vKUsmSLZBaxzv4sRGk/jCRr0OJNtwET0YAyYSGAMmEhgsjsT
      S+fKlStYtGhRi9Ma3zZn165dyMzMvOf3yc3NbfexEcmFbAMuKSnBTz/99MD50tPTkZ6eboAR
      EckPN6GJBCa7NfDs2bNRV1fX7t+X98giUyS7gEePHm3sIRAJg6slIoExYCKBMWAigTFgIoEx
      YCKBMWAigTFgIoExYCKBMWAigTFgIoH9P1JwuOpzo/YhAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='CO2 per sector in Germany 2020 (2)' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Food (kg) eaten in Germany (per person)' width='384'>
      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
      EhQDgIhIUAwAIiJBMQCIiATFACAiEhQDgIhIUAwAIiJBMQCIiATFACAiEhQDgIhIUAwAIiJB
      MQCIiATFACAiEhQDgIhIUAwAIiJBMQCIiATFACAiEhQDgIhIUAwAIiJBMQCIiATFACAiEhQD
      gIhIUAwAIiJBMQCIiATFACAiEhQDgIhIUAwAIiJBMQCIiATFACAiEhQDgIhIUAwAIiJBMQCI
      iATFACAiEhQDgIhIUAwAIiJBMQCIiATFACAiEhQDgIhIUAwAIiJBMQCIiATFACAiEhQDgIhI
      UAwAIiJBMQCIiATFACAiEhQDgIhIUAwAIiJBMQCIiATFACAiEhQDgIhIUAwAIiJBMQCIiATF
      ACAiEhQDgIhIUNqhvrGtpw1PHXhqJLdlULH+sfjowY9Gfb1ERD91Qw4Al+RCY1fjSG7LoAwa
      w6ivk4hIBGwCIiISFAOAiEhQDAAiIkExAIiIBMUAICISFAOAiEhQDAAiIkExAIiIBMUAICIS
      FAOAiEhQDAAiIkExAIiIBMUAICISFAOAiEhQDAAiIkExAIiIBMUAICISFAOAiEhQDAAiIkEx
      AIiIBMUAICISFAOAiEhQDAAiIkExAIiIBMUAICISFAOAiEhQDAAiIkExAIiIBMUAICISFAOA
      iEhQDAAiIkExAIiIBMUAICISFAOAiEhQDAAiIkExAIiIBMUAICISFAOAiEhQDAAiIkExAIiI
      BMUAICISFAOAiEhQDAAiIkExAIiIBMUAICISFAOAiEhQDAAiIkExAIiIBMUAICISFAOAiEhQ
      DAAiIkExAIiIBMUAICISFAOAiEhQDAAiIkExAIiIBMUAICISlPZ2b4BIilqKYLFbRn296eHp
      8NH5jPp6iejOxgAYRX8q+BNK20tHfb17VuxBQmDCqK+XiO5sbAIiIhIUA4CISFAMACIiQTEA
      iIgExQAgIhIUA4CISFAMACIiQTEAiIgExQAgIhIUA4CISFAMACIiQTEAiIgExQAgIhIUA4CI
      SFAMACIiQTEAiIgExQAgIhIUA4CISFAMACIiQTEAiIgExQAgIhIUA4CISFAMACIiQWlv9wYQ
      EQFAnfUSCoynRn29CT5JmB5036iv907AACCiO4LN1Ys2e/Oor3ecPnTU13mnYBMQEZGgGABE
      RIJiABARCYoBQEQkKAYAEZGgGABERIJiABARCYoBQEQkKAYAEZGgGABERIJiABARCYoBQEQk
      KAYAEZGgGABERIJiABARCYoBQEQkKAYAEZGgGABERIJiABARCYoBQEQkKAYAEZGgGABERIJi
      ABARCYoBQEQkKAYAEZGgGABERIJiABARCYoBQEQkKAYAEZGgGABERIJiABARCYoBQEQkKAYA
      EZGgGABERIJiABARCYoBQEQkKAYAEZGgGABERIJiABARCYoBQEQkKAYAEZGgGABERIJiABAR
      CYoBQEQkKAYAEZGgGABERIJiABARCYoBQEQkKAYAEZGgGABERIJiABARCYoBQEQkKAYAEZGg
      GABERIJiABARCYoBQEQkKAYAEZGgGABERIJiABARCYoBQEQkKAYAEZGgGABERIJiABARCYoB
      QEQkKAYAEZGgGABERIJiABARCUp7uzeAaKhyGnJgsVtGfb2Z0Znw0fmM+nqJRhoDgO4afzn7
      F1w0Xhz19X676lsGAP0ksQmIiEhQDAAiIkExAIiIBMUAICISFAOAiEhQDAAiIkExAIiIBMUA
      ICISFAOAiEhQDAAiIkExAIiIBMUAICISFAOAiEhQDAAiIkExAIiIBMUAICISFAOAiEhQDAAi
      IkExAIiIBMUAICISFAOAiEhQDAAiIkExAIiIBMUAICISFAOAiEhQDAAiIkExAIiIBMUAICIS
      lPZ2bwAREd08l+TCty1fD+szDAAiop8ASZJQ31szrM+wCYiISFAMACIiQTEAiIgExT4AIkF8
      eO5DbCrZNOrrfX3G61iXsm7U10s/jgFAJAin24leZ+9tWS/dmdgEREQkKAYAEZGgGABERIJi
      ABARCYqdwES3yOmOY6izXhr19c4d+yAiDNGjvl66+zEAiG6RLqcFRkf7qK/X4baP+jrpp4FN
      QEREgmIAEBEJigFARCQoBgARkaAYAEREgmIAEBEJigFARCQoBgARkaAYAEREgmIAEBEJigFA
      RCQoBgARkaA4GRwR0RC09rTii/IvRn29UX5RWHvP2hH5bgYAEdEQtFvb8cn5T0Z9vTPDZo5Y
      ALAJiIhIULwCIMUZ40lctlaP6jo10GBl5FOjuk4iuooBQIoupxnt9tZRXacGmlFdHxH9HZuA
      iIgExQAgIhIUA4CISFAMACIiQTEAiIgExQAgIhIUA4CISFAMACIiQTEAiIgExQAgIhIUA4CI
      SFAMACIiQTEAiIgExQAgIhIUA4CISFAMACIiQTEAiIgExQAgIhIUA4CISFAMACIiQTEAiIgE
      xQAgIhIUA4CISFAMACIiQTEAiIgExQAgIhIUA4CISFAMACIiQTEAiIgExQAgIhIUA4CISFAM
      ACIiQTEAiIgExQAgIhIUA4CISFAMACIiQTEAiIgE9f9wjlIklxU4JAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='Foodprint Germany (per person)' width='384'>
      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
      HH06TzXUmB26qE/nSUT0KPyoAuCGuRwOyd6n81TzJIqInlHcexERCYoBQEQkKAYAEZGgGABE
      RIJiABARCYoBQEQkKAYAEZGgGABERIJiABARCYoBQEQkKAYAEZGgGABERIJiABARCYoBQEQk
      KAYAEZGgGABERIJiABARCYoBQEQkKAYAEZGgGABERIJiABARCYoBQEQkKAYAEZGgGABERIJi
      ABARCYoBQEQkKAYAEZGgGABERIJiABARCYoBQEQkKAYAEZGgGABERIJiABARCYoBQEQkKAYA
      EZGgGABERIJiABARCYoBQEQkKAYAEZGgGABERIJiABARCYoBQEQkKAYAEZGgGABERIJiABAR
      CYoBQEQkKAYAEZGgGABERIJiABARCYoBQEQkKAYAEZGgGABERIJiABARCYoBQEQkKM2DvvFW
      +y28cuiVx1mWHsX4xmDjrI19Pl8ioh+7Bw4Ah+RAbVvt4yxLjzw1nn0+TyIiEbAJiIhIUAwA
      IiJBMQCIiATFACAiEhQDgIhIUAwAIiJBMQCIiATFACAiEhQDgIhIUAwAIiJBMQCIiATFACAi
      EhQDgIhIUAwAIiJBMQCIiATFACAiEhQDgIhIUAwAIiJBMQCIiATFACAiEhQDgIhIUAwAIiJB
      MQCIiATFACAiEhQDgIhIUAwAIiJBMQCIiATFACAiEhQDgIhIUAwAIiJBMQCIiATFACAiEhQD
      gIhIUAwAIiJBMQCIiATFACAiEhQDgIhIUAwAIiJBMQCIiATFACAiEhQDgIhIUAwAIiJBMQCI
      iATFACAiEhQDgIhIUAwAIiJBMQCIiATFACAiEhQDgIhIUAwAIiJBMQCIiATFACAiEhQDgIhI
      UAwAIiJBMQCIiATFACAiEhQDgIhIUAwAIiJBMQCIiATFACAiEhQDgIhIUAwAIiJBMQCIiATF
      ACAiEhQDgIhIUAwAIiJBMQCIiATFACAiEhQDgIhIUAwAIiJBMQCIiATFACAiEhQDgIhIUAwA
      IiJBMQCIiATFACAiEhQDgIhIUAwAIiJBMQCIiATFACAiEhQDgIhIUAwAIiJBMQCIiATFACAi
      EhQDgIhIUAwAIiJBMQCIiATFACAiEhQDgIhIUAwAIiJBMQCIiATFACAiEhQDgIhIUAwAIiJB
      aZ50AYiIAKDeWosK09U+n2+4RySivAb2+XyfBgwAInoqNNoacNF4rs/nK0ESNgDYBEREJCgG
      ABGRoBgARESCYgAQEQmKAUBEJCgGABGRoBgARESCYgAQEQmKAUBEJCgGABGRoBgARESCYgAQ
      EQmKAUBEJCgGABGRoBgARESCYgAQEQmKAUBEJCgGABGRoBgARESCYgAQEQmKAUBEJCgGABGR
      oBgARESCYgAQEQmKAUBEJCgGABGRoBgARESCYgAQEQmKAUBEJCgGABGRoBgARESCYgAQEQmK
      AUBEJCgGABGRoBgARESCYgAQEQmKAUBEJCgGABGRoBgARESCYgAQEQmKAUBEJCgGABGRoBgA
      RESCYgAQEQmKAUBEJCgGABGRoBgARESCYgAQEQmKAUBEJCgGABGRoBgARESCYgAQEQmKAUBE
      JCgGABGRoBgARESCYgAQEQmKAUBEJCgGABGRoBgARESCYgAQEQmKAUBEJCgGABGRoBgARESC
      YgAQEQmKAUBEJCgGABGRoBgARESCYgAQEQmKAUBEJCgGABGRoBgARESCYgAQEQmKAUBEJCgG
      ABGRoBgARESCYgAQEQmKAUBEJCgGABGRoBgARESCYgAQEQmKAUBEJCgGABGRoBgARESCYgAQ
      EQmKAUBEJCgGABGRoBgARESCYgAQEQmKAUBEJCgGABGRoBgARESCYgAQEQmKAUBEJCgGABGR
      oDRPugBE1DfqTfVosjT1+XzDvcPh7+Hf5/Ol+2MAEAlia9FWbC3a2ufz/X8T/h+WJCzp8/nS
      /bEJiIhIUAwAIiJBMQCIiATFACAiEhQDgIhIUAwAIiJBMQCIiATFACAiEhQDgIhIUAwAIiJB
      MQCIiATFACAiEhQDgIhIUAwAIiJBMQCIiATFACAiEhQDgIhIUAwAIiJBMQCIiATFACAiEhQf
      Ct+HjlQcgcFq6PP5zo2dC71O3+fzJaKnGwOgD31a8ClKmkv6fL4TIyYyAIioGzYBEREJigFA
      RCQoBgARkaAYAEREgmIAEBEJigFARCQoBgARkaAYAEREgmIAEBEJigFARCQoBgARkaAYAERE
      gmIAEBEJigFARCQoBgARkaAYAEREguIDYeiZ8dus36KhvaHP5/uHyX+Ar7tvn8+X6HFjANAz
      I6cuB5XGyj6fr81p6/N5EvUFBgAR0Y+A1WHBqcYjvfoMA4CI6EfALtlxrb13zxznRWAiIkEx
      AIiIBMUAICISFAOAiEhQvAhM9IiUtF2GwdbY5/Md4pMKX61fn89XNFWtVfi69Os+n2+cfxwW
      xC14LN/NACB6RK6bSnDDfL3P5xvlNZAB0Adumm5iy+UtfT7faZHTHlsAsAmIiEhQPAMghdnR
      jg5nR5/OU6UCfDQ8eiV6EhgApDjdeBTXe3kjycPSqXR4LfrtPp0nEXViExARkaAYAEREgmIA
      EBEJigFARCQoBgARkaD+PxcnKDsC0NJuAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Kg and CO2 per person per year' width='384'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
